var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddNewUserDto.html",[0,0.169,1,2.831]],["body/classes/AddNewUserDto.html",[0,0.206,1,3.445,2,0.98,3,0.091,4,0.079,5,0.079,6,2.893,7,0.434,8,1.465,9,3.508,10,3.508,11,2.961,12,3.749,13,3.508,14,2.961,15,3.508,16,3.508,17,2.565,18,1.075,19,0.014,20,1.714,21,1.722,22,3.577,23,0.995,24,3.329,25,3.329,26,3.445,27,3.329,28,3.329,29,1.69,30,1.753,31,3.754,32,3.121,33,3.754,34,3.445,35,3.329,36,3.754,37,3.754,38,3.329,39,3.329,40,2.188,41,2.893,42,3.329,43,3.329,44,0.248,45,3.711,46,1.335,47,4.038,48,2.402,49,3.686,50,1.519,51,0.091,52,0.008,53,0.008]],["title/controllers/AppController.html",[54,1.16,55,2.831]],["body/controllers/AppController.html",[0,0.235,3,0.15,4,0.129,5,0.129,19,0.014,20,1.156,44,0.345,51,0.15,52,0.012,53,0.012,54,1.967,55,4.801,56,1.611,57,4.759,58,0.993,59,4.811,60,5.476,61,2.884,62,2.29,63,4.759,64,1.553,65,5.476]],["title/injectables/AppLoggerMiddleware.html",[66,1.001,67,2.831]],["body/injectables/AppLoggerMiddleware.html",[0,0.177,3,0.113,4,0.097,5,0.097,7,0.538,8,1.701,18,0.562,19,0.014,23,0.759,40,1.881,44,0.288,51,0.113,52,0.01,53,0.01,58,0.747,66,1.414,67,4,68,1.724,69,3.583,70,3.5,71,6.753,72,1.579,73,5.569,74,5.569,75,6.316,76,6.566,77,6.753,78,6.753,79,4.123,80,1.169,81,0.87,82,1.127,83,1.169,84,4.839,85,3.227,86,1.467,87,5.569,88,4.123,89,5.569,90,2.961,91,4.123,92,3.382,93,5.569,94,4.839,95,4.123,96,5.569,97,5.569,98,4.123,99,4.123,100,4.123,101,5.569,102,5.569,103,4.123,104,4.123,105,4.123]],["title/modules/AppModule.html",[106,1.16,107,2.831]],["body/modules/AppModule.html",[0,0.158,3,0.101,4,0.087,5,0.087,14,1.935,17,1.676,18,0.701,19,0.014,23,0.501,44,0.38,51,0.101,52,0.009,53,0.009,55,2.639,56,1.081,58,0.666,59,2.45,67,2.639,72,1.042,80,1.042,81,0.775,82,1.004,83,1.042,84,4.471,106,1.747,107,5.544,108,1.473,109,1.536,110,1.676,111,1.676,112,1.536,113,2.347,114,1.676,115,3.193,116,3.193,117,4.678,118,4.678,119,4.678,120,4.678,121,2.347,122,1.676,123,1.676,124,3.674,125,3.958,126,3.674,127,5.145,128,6.432,129,3.674,130,3.674,131,4.027,132,5.034,133,2.639,134,2.45,135,1.755,136,3.674,137,3.674,138,3.674,139,3.674,140,3.674,141,3.193,142,3.674,143,2.876,144,2.876,145,3.674,146,3.674,147,3.674,148,3.674,149,3.674,150,3.674,151,3.674,152,2.292,153,3.674,154,1.755,155,3.674,156,3.674,157,3.674,158,2.157,159,3.674]],["title/injectables/AppService.html",[59,2.628,66,1.001]],["body/injectables/AppService.html",[0,0.238,3,0.152,4,0.131,5,0.131,7,0.723,19,0.014,20,1.421,23,0.755,44,0.286,51,0.152,52,0.012,53,0.012,58,1.004,59,4.489,63,6.555,64,1.571,66,1.709,68,2.316,72,1.909,83,1.571,160,4.815,161,5.541,162,5.541,163,5.541]],["title/controllers/AuthController.html",[54,1.16,164,2.831]],["body/controllers/AuthController.html",[0,0.124,3,0.079,4,0.068,5,0.068,7,0.377,18,0.589,19,0.014,21,1.019,23,0.589,32,3.415,44,0.346,46,1.158,51,0.079,52,0.008,53,0.008,54,0.85,56,0.85,58,0.524,62,1.807,64,1.898,70,2.399,72,1.225,76,5.611,80,1.225,81,0.912,82,1.181,83,1.225,90,2.074,92,2.165,158,1.696,164,3.104,165,2.51,166,1.447,167,2.888,168,3.4,169,4.498,170,4.994,171,2.888,172,3.719,173,3.832,174,3.104,175,2.573,176,2.888,177,2.888,178,2.275,179,2.888,180,4.305,181,2.888,182,2.888,183,2.064,184,1.926,185,1.379,186,2.888,187,3.719,188,2.074,189,3.23,190,2.51,191,3.23,192,2.51,193,2.888,194,2.888,195,2.888,196,2.888,197,1.696,198,3.104,199,2.888,200,2.888,201,2.888,202,2.881,203,4.498,204,2.275,205,2.888,206,2.888,207,4.807,208,2.074,209,5.146,210,2.537,211,2.888,212,4.053,213,3.584,214,4.053,215,4.053,216,2.881,217,3.832,218,2.888,219,2.881,220,2.888,221,2.261,222,2.51,223,2.888,224,2.888,225,2.888,226,3.452,227,2.888,228,2.074,229,2.51,230,2.074,231,1.926,232,2.888,233,2.074,234,2.074]],["title/modules/AuthModule.html",[106,1.16,117,2.628]],["body/modules/AuthModule.html",[0,0.177,3,0.113,4,0.097,5,0.097,19,0.014,44,0.395,51,0.113,52,0.01,53,0.01,56,1.635,58,0.745,106,1.853,108,1.648,109,1.719,110,1.875,111,1.875,112,1.719,113,2.872,114,1.875,117,5.035,121,2.535,122,1.875,123,1.875,125,3.706,131,4.35,132,5.515,133,2.953,134,2.741,135,1.963,141,3.572,143,3.218,144,3.218,158,2.414,164,4.522,175,1.719,189,4.531,190,3.572,191,4.531,192,3.572,235,3.572,236,3.572,237,4.111,238,3.572,239,2.741,240,4.111,241,2.535,242,3.572,243,3.218,244,3.572,245,3.572,246,3.572,247,3.218,248,3.572,249,3.572,250,3.572,251,3.572]],["title/entities/Bill.html",[252,1.348,253,2.459]],["body/entities/Bill.html",[0,0.153,3,0.098,4,0.084,5,0.084,7,0.466,8,1.54,18,0.974,19,0.014,21,1.58,23,0.913,29,1.498,40,2.898,44,0.328,51,0.098,52,0.009,53,0.009,86,1.54,154,1.706,175,2.988,252,1.725,253,3.147,254,3.104,255,3.079,256,1.281,257,5.847,258,3.079,259,3.58,260,1.881,261,3.345,262,3.345,263,3.345,264,3.345,265,3.572,266,2.098,267,3.572,268,3.433,269,3.572,270,1.881,271,3.572,272,2.098,273,3.572,274,2.656,275,2.656,276,2.962,277,3.104,278,1.983,279,2.022,280,2.656,281,2.656,282,2.796,283,2.409,284,1.706,285,2.098,286,1.881,287,1.881,288,3.079,289,3.079,290,3.079,291,3.079,292,2.656,293,1.881]],["title/controllers/BillController.html",[54,1.16,294,2.831]],["body/controllers/BillController.html",[0,0.154,3,0.098,4,0.084,5,0.084,7,0.467,18,0.867,19,0.014,20,1.567,21,1.582,23,0.914,44,0.329,51,0.098,52,0.009,53,0.009,54,1.054,56,1.054,58,0.649,61,1.886,62,1.497,64,1.901,72,1.433,80,1.803,81,1.342,82,1.738,83,1.901,166,1.794,183,2.413,185,2.796,253,2.234,256,1.525,294,3.629,295,3.112,296,1.664,297,2.901,298,2.305,299,2.305,300,1.945,301,3.112,302,4.342,303,3.581,304,3.581,305,1.634,306,3.152,307,3.581,308,1.634,309,3.152,310,3.581,311,1.634,312,4.87,313,3.152,314,3.581,315,1.794,316,1.794,317,1.886,318,3.653,319,3.112,320,1.497,321,3.955,322,1.497,323,3.581,324,2.234,325,3.581,326,3.581,327,2.234,328,3.581,329,2.234,330,3.581,331,2.234,332,3.581]],["title/modules/BillModule.html",[106,1.16,333,2.831]],["body/modules/BillModule.html",[0,0.22,3,0.14,4,0.121,5,0.121,19,0.014,44,0.362,51,0.14,52,0.011,53,0.011,56,1.887,58,0.928,106,2.06,108,2.053,109,2.141,110,2.336,111,2.336,112,2.141,113,3.194,114,2.336,121,2.925,122,2.336,123,2.336,294,5.029,318,4.81,319,4.45,333,5.537,334,4.45,335,4.45,336,5.121,337,5.121]],["title/injectables/BillService.html",[66,1.001,318,2.459]],["body/injectables/BillService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,18,0.889,19,0.014,20,1.445,23,0.933,29,1.775,44,0.312,51,0.104,52,0.009,53,0.009,58,0.687,64,1.942,66,1.335,68,1.585,72,1.491,80,1.849,81,1.376,82,1.782,83,2.06,86,0.999,253,4.273,256,1.552,296,1.732,297,2.974,298,2.399,299,2.399,300,2.024,301,4.57,302,4.273,305,2.399,308,2.399,311,2.399,312,4.845,318,3.281,320,1.585,321,4.116,322,1.585,338,3.295,339,3.792,340,3.792,341,3.792,342,3.792,343,3.792,344,4.273,345,2.366,346,2.366,347,2.366]],["title/classes/CreateBillDto.html",[0,0.169,302,2.459]],["body/classes/CreateBillDto.html",[0,0.263,2,1.799,3,0.168,4,0.144,5,0.144,19,0.013,51,0.168,52,0.012,53,0.012,302,4.454,348,5.313,349,4.785]],["title/classes/CreateManageDto.html",[0,0.169,350,2.459]],["body/classes/CreateManageDto.html",[0,0.263,2,1.799,3,0.168,4,0.144,5,0.144,19,0.013,51,0.168,52,0.012,53,0.012,350,4.454,351,5.313,352,4.785]],["title/classes/CreateRoleDto.html",[0,0.169,353,2.628]],["body/classes/CreateRoleDto.html",[0,0.269,2,1.454,3,0.135,4,0.117,5,0.117,7,0.645,8,1.915,18,0.987,19,0.014,20,1.529,21,1.479,22,2.602,23,0.855,29,1.709,30,2.602,44,0.324,45,3.45,46,1.982,48,3.141,49,3.302,50,2.254,51,0.135,52,0.011,53,0.011,81,1.454,256,1.509,353,4.181,354,5.986,355,3.549,356,4.294,357,4.942,358,4.942]],["title/classes/CreateRoomDetailDto.html",[0,0.169,359,2.459]],["body/classes/CreateRoomDetailDto.html",[0,0.263,2,1.799,3,0.168,4,0.144,5,0.144,19,0.013,51,0.168,52,0.012,53,0.012,359,4.454,360,5.313,361,4.785]],["title/classes/CreateRoomDto.html",[0,0.169,362,2.459]],["body/classes/CreateRoomDto.html",[0,0.263,2,1.799,3,0.168,4,0.144,5,0.144,19,0.013,51,0.168,52,0.012,53,0.012,362,4.454,363,5.313,364,4.785]],["title/classes/CreateServiceDto.html",[0,0.169,365,2.459]],["body/classes/CreateServiceDto.html",[0,0.263,2,1.799,3,0.168,4,0.144,5,0.144,19,0.013,51,0.168,52,0.012,53,0.012,365,4.454,366,5.313,367,4.785]],["title/classes/CreateServicesUsedDto.html",[0,0.169,368,2.459]],["body/classes/CreateServicesUsedDto.html",[0,0.263,2,1.799,3,0.168,4,0.144,5,0.144,19,0.013,51,0.168,52,0.012,53,0.012,368,4.454,369,5.313,370,4.785]],["title/classes/DeleteRoleDto.html",[0,0.169,371,3.085]],["body/classes/DeleteRoleDto.html",[0,0.283,2,1.569,3,0.146,4,0.126,5,0.126,7,0.696,8,2.008,18,0.896,19,0.014,21,1.258,23,0.727,29,1.756,30,2.808,44,0.34,45,3.294,46,2.138,48,3.294,50,2.432,51,0.146,52,0.011,53,0.011,256,1.562,355,3.83,356,4.634,371,5.147,372,5.715]],["title/injectables/LoginService.html",[66,1.001,189,2.459]],["body/injectables/LoginService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,17,2.754,18,0.717,19,0.014,23,0.717,44,0.375,51,0.104,52,0.009,53,0.009,58,0.687,62,1.585,64,1.075,66,1.335,68,1.585,70,2.919,72,1.491,80,1.491,81,1.11,82,1.437,83,1.075,86,1.385,92,3.43,135,1.811,168,3.179,169,4.116,172,2.724,173,4.347,175,2.199,178,1.997,189,3.281,197,3.088,203,2.968,204,3.179,210,2.227,221,4.116,222,4.57,239,2.528,243,2.968,256,0.831,279,1.521,373,3.295,374,2.968,375,4.347,376,6.315,377,3.792,378,2.919,379,5.259,380,3.792,381,2.528,382,3.777,383,3.792,384,2.968,385,3.295,386,3.792,387,3.792,388,3.506,389,5.259,390,5.259,391,3.792,392,3.792,393,5.259,394,3.792,395,3.295,396,3.792]],["title/entities/Manage.html",[252,1.348,397,2.628]],["body/entities/Manage.html",[0,0.15,3,0.096,4,0.083,5,0.083,7,0.457,8,1.519,18,0.968,19,0.014,21,1.569,23,0.906,29,1.173,40,2.872,44,0.299,51,0.096,52,0.009,53,0.009,86,1.523,154,1.672,175,3.132,252,1.701,255,3.045,256,1.267,258,3.045,259,3.559,260,1.844,261,3.315,262,3.315,263,3.315,264,3.315,266,2.056,270,1.844,272,2.92,274,2.619,275,2.619,276,3.396,278,1.944,279,1.404,280,2.619,281,2.619,282,2.741,283,2.375,284,1.672,285,2.056,286,1.844,287,1.844,288,3.045,289,3.045,290,3.045,291,3.045,292,2.619,293,1.844,397,3.316,398,3.043,399,5.783,400,3.502,401,3.502,402,4.928,403,4.928,404,3.502,405,3.502,406,3.502]],["title/controllers/ManageController.html",[54,1.16,407,2.831]],["body/controllers/ManageController.html",[0,0.154,3,0.098,4,0.084,5,0.084,7,0.467,18,0.867,19,0.014,20,1.567,21,1.582,23,0.914,44,0.329,51,0.098,52,0.009,53,0.009,54,1.054,56,1.054,58,0.649,61,1.886,62,1.497,64,1.901,72,1.433,80,1.803,81,1.342,82,1.738,83,1.901,166,1.794,183,2.413,185,2.796,256,1.525,296,1.664,297,2.901,298,2.305,299,2.305,300,1.945,305,1.634,306,3.152,308,1.634,309,3.152,311,1.634,313,3.152,315,1.794,316,1.794,317,1.886,320,1.497,322,1.497,324,2.234,327,2.234,329,2.234,331,2.234,350,4.342,397,2.388,407,3.629,408,3.112,409,3.112,410,3.581,411,3.581,412,3.581,413,3.581,414,4.87,415,3.581,416,3.653,417,3.112,418,3.955,419,3.581,420,3.581,421,3.581,422,3.581,423,3.581,424,3.581]],["title/modules/ManageModule.html",[106,1.16,425,2.831]],["body/modules/ManageModule.html",[0,0.22,3,0.14,4,0.121,5,0.121,19,0.014,44,0.362,51,0.14,52,0.011,53,0.011,56,1.887,58,0.928,106,2.06,108,2.053,109,2.141,110,2.336,111,2.336,112,2.141,113,3.194,114,2.336,121,2.925,122,2.336,123,2.336,407,5.029,416,4.81,417,4.45,425,5.537,426,4.45,427,4.45,428,5.121,429,5.121]],["title/injectables/ManageService.html",[66,1.001,416,2.459]],["body/injectables/ManageService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,18,0.889,19,0.014,20,1.445,23,0.933,29,1.775,44,0.312,51,0.104,52,0.009,53,0.009,58,0.687,64,1.942,66,1.335,68,1.585,72,1.491,80,1.849,81,1.376,82,1.782,83,2.06,86,0.999,256,1.552,296,1.732,297,2.974,298,2.399,299,2.399,300,2.024,305,2.399,308,2.399,311,2.399,320,1.585,322,1.585,344,4.273,345,2.366,346,2.366,347,2.366,350,4.273,397,4.566,409,4.57,414,4.845,416,3.281,418,4.116,430,3.295,431,3.792,432,3.792,433,3.792,434,3.792,435,3.792]],["title/injectables/RegisterService.html",[66,1.001,191,2.459]],["body/injectables/RegisterService.html",[0,0.142,3,0.09,4,0.078,5,0.078,7,0.43,11,3.421,14,2.509,17,2.964,18,0.649,19,0.014,23,0.649,44,0.361,51,0.09,52,0.008,53,0.008,58,0.598,62,1.992,64,0.935,66,1.21,68,1.379,70,2.645,72,1.351,80,1.351,81,1.006,82,1.302,83,0.935,86,1.473,92,3.703,135,1.575,152,3.822,168,2.945,170,4.14,172,3.422,175,2.338,178,1.737,180,4.084,191,2.972,197,2.798,204,3.226,210,1.937,213,2.645,241,2.794,242,2.866,243,2.581,256,1.225,279,1.322,374,2.581,375,4.654,378,2.645,381,2.199,382,3.422,384,2.581,385,2.866,388,3.729,436,2.866,437,2.945,438,3.298,439,4.764,440,3.298,441,4.017,442,3.298,443,2.581,444,3.177,445,2.866,446,3.298,447,4.764,448,3.298,449,3.298,450,3.298,451,3.298,452,3.729,453,4.764,454,4.14,455,4.14,456,3.298,457,4.764,458,3.298,459,4.764,460,3.298,461,4.764,462,3.298,463,3.298,464,3.298]],["title/entities/Role.html",[241,1.798,252,1.348]],["body/entities/Role.html",[0,0.154,3,0.098,4,0.084,5,0.084,7,0.467,8,1.543,18,0.948,19,0.014,20,1.236,21,1.5,23,0.867,29,1.192,40,2.901,44,0.302,51,0.098,52,0.009,53,0.009,64,1.015,81,1.236,86,1.766,154,1.71,241,2.305,252,1.729,255,3.083,256,1.283,258,3.083,259,3.658,260,1.886,261,3.348,262,3.348,263,3.348,264,3.348,268,3.438,270,1.886,274,2.661,275,2.661,279,2.026,280,2.661,281,2.661,283,2.413,284,2.413,286,1.886,287,1.886,288,3.083,289,3.083,290,3.083,291,3.083,292,2.661,293,1.886,465,2.803,466,3.581,467,5.855,468,3.581,469,3.581,470,3.581,471,3.581,472,3.112,473,3.112,474,4.391,475,3.581,476,3.581,477,3.581]],["title/controllers/RoleController.html",[54,1.16,478,2.628]],["body/controllers/RoleController.html",[0,0.092,3,0.059,4,0.05,5,0.05,7,0.279,18,0.667,19,0.014,21,1.263,23,0.73,29,1.347,32,2.972,44,0.277,46,0.858,51,0.059,52,0.006,53,0.006,54,0.629,56,0.629,58,0.388,61,1.126,62,0.894,64,1.869,72,0.971,80,1.388,81,1.033,82,1.337,83,1.518,86,0.902,92,2.682,166,1.071,168,3.761,174,3.845,178,2.819,183,1.021,184,1.426,185,1.635,187,4.102,188,1.536,198,3.845,202,3.57,204,2.819,207,4.735,208,3.515,209,4.837,210,3.144,212,2.68,213,3.659,214,1.674,215,1.674,216,3.57,217,4.396,219,1.426,226,2.283,228,1.536,230,3.845,231,1.426,233,3.515,234,3.515,241,3.52,256,0.938,296,1.41,300,1.648,315,1.715,316,1.071,317,2.577,320,0.894,322,0.894,353,3.263,437,2.254,444,3.263,478,2.283,479,1.859,480,1.859,481,3.72,482,3.72,483,4.653,484,3.72,485,3.999,486,1.859,487,2.139,488,2.139,489,4.253,490,1.859,491,1.859,492,4.894,493,2.139,494,2.139,495,2.139,496,1.859,497,1.859,498,2.139,499,1.859,500,2.139,501,2.139,502,1.859,503,2.975,504,2.139,505,2.139,506,4.653,507,2.139,508,2.139,509,5.354,510,2.139,511,2.139,512,1.674,513,2.139,514,2.139,515,2.139,516,1.859,517,2.139,518,2.139,519,2.139,520,2.139,521,2.139]],["title/modules/RoleModule.html",[106,1.16,118,2.628]],["body/modules/RoleModule.html",[0,0.211,3,0.135,4,0.116,5,0.116,19,0.014,44,0.385,51,0.135,52,0.011,53,0.011,56,1.837,58,0.89,106,2.02,108,1.968,109,2.052,110,2.239,111,2.239,112,2.052,113,3.132,114,2.239,118,5.085,121,2.848,122,2.239,123,2.239,125,3.272,134,3.272,135,2.344,241,2.239,437,4.016,478,4.578,502,4.265,522,4.265,523,4.265,524,4.908,525,4.908,526,4.265,527,4.908]],["title/injectables/RoleService.html",[66,1.001,437,2.075]],["body/injectables/RoleService.html",[0,0.119,3,0.076,4,0.065,5,0.065,7,0.361,18,0.823,19,0.014,23,0.866,29,1.498,32,1.535,44,0.328,51,0.076,52,0.007,53,0.007,58,0.501,64,1.712,66,1.062,68,1.156,70,1.535,72,1.186,80,1.712,81,1.274,82,1.65,83,1.712,86,1.673,92,3.304,135,1.32,152,1.725,168,3.961,178,3.179,184,1.843,197,2.455,204,3.473,213,3.525,229,2.402,231,1.843,241,3.098,256,1.105,279,1.108,320,1.156,322,1.156,353,3.748,375,3.748,381,1.843,388,4.235,437,2.96,441,4.737,443,2.164,444,4.636,445,3.633,481,3.633,482,3.633,483,4.885,484,3.633,485,4.235,486,3.633,489,3.633,490,3.633,496,3.633,499,3.633,503,3.633,516,2.402,526,2.402,528,2.402,529,2.765,530,2.765,531,2.765,532,2.765,533,2.765,534,2.765,535,2.765,536,7.087,537,2.765,538,3.947,539,4.382,540,2.402,541,2.765,542,4.181,543,2.765,544,2.765,545,2.765]],["title/entities/Room.html",[252,1.348,546,2.075]],["body/entities/Room.html",[0,0.159,3,0.102,4,0.088,5,0.088,7,0.484,8,1.583,18,0.959,19,0.014,21,1.524,23,0.88,29,1.222,40,2.947,44,0.334,51,0.102,52,0.009,53,0.009,86,1.573,154,1.773,252,1.773,255,3.143,256,1.308,258,3.143,259,3.619,260,1.955,261,3.402,262,3.402,263,3.402,264,3.402,266,2.18,270,1.955,272,2.18,274,2.729,275,2.729,276,3.043,278,2.061,279,2.078,280,2.729,281,2.729,283,2.475,284,1.773,285,2.18,286,1.955,287,1.955,288,3.143,289,3.143,290,3.143,291,3.143,292,2.729,293,1.955,546,2.729,547,3.226,548,4.242,549,3.713,550,3.713,551,3.713,552,3.713,553,3.226]],["title/controllers/RoomController.html",[54,1.16,554,2.831]],["body/controllers/RoomController.html",[0,0.154,3,0.098,4,0.084,5,0.084,7,0.467,18,0.867,19,0.014,20,1.567,21,1.582,23,0.914,44,0.329,51,0.098,52,0.009,53,0.009,54,1.054,56,1.054,58,0.649,61,1.886,62,1.497,64,1.901,72,1.433,80,1.803,81,1.342,82,1.738,83,1.901,166,1.794,183,2.413,185,2.796,256,1.525,296,1.664,297,2.901,298,2.305,299,2.305,300,1.945,305,1.634,306,3.152,308,1.634,309,3.152,311,1.634,313,3.152,315,1.794,316,1.794,317,1.886,320,1.497,322,1.497,324,2.234,327,2.234,329,2.234,331,2.234,362,4.342,546,1.886,554,3.629,555,3.112,556,3.112,557,3.581,558,3.581,559,3.581,560,3.581,561,4.87,562,3.581,563,3.653,564,3.112,565,3.955,566,3.112,567,3.581,568,3.581,569,3.581,570,3.581,571,3.581]],["title/entities/RoomDetail.html",[252,1.348,572,2.628]],["body/entities/RoomDetail.html",[0,0.121,3,0.077,4,0.066,5,0.066,7,0.366,8,1.292,18,1.009,19,0.014,21,1.705,23,0.985,29,1.507,40,2.585,44,0.343,51,0.077,52,0.007,53,0.007,86,1.341,154,1.341,175,2.772,252,1.447,253,4.137,255,2.681,256,1.115,258,2.681,259,3.62,260,1.479,261,2.984,262,2.984,263,2.984,264,2.984,266,1.649,268,4.1,270,1.479,272,2.484,274,2.228,275,2.228,276,2.989,277,3.677,278,1.559,279,1.697,280,2.228,281,2.228,282,2.198,283,2.021,284,1.341,285,1.649,286,1.479,287,1.479,288,2.681,289,2.681,290,2.681,291,2.681,292,2.228,293,1.479,546,3.492,572,2.821,573,2.44,574,5.091,575,5.091,576,5.091,577,5.091,578,6.079,579,2.808,580,2.808,581,2.808,582,2.808,583,2.808,584,2.808,585,2.808,586,2.808,587,2.808,588,3.778,589,2.808,590,4.231,591,2.808,592,2.808,593,2.808,594,4.231,595,4.231,596,2.808,597,2.808,598,2.808]],["title/controllers/RoomDetailController.html",[54,1.16,599,2.831]],["body/controllers/RoomDetailController.html",[0,0.153,3,0.098,4,0.084,5,0.084,7,0.465,18,0.865,19,0.014,20,1.565,21,1.579,23,0.912,44,0.328,51,0.098,52,0.009,53,0.009,54,1.048,56,1.048,58,0.646,61,1.876,62,1.49,64,1.898,72,1.428,80,1.799,81,1.339,82,1.734,83,1.898,166,1.785,183,2.404,185,2.788,256,1.522,296,1.658,297,2.894,298,2.297,299,2.297,300,1.938,305,1.625,306,3.141,308,1.625,309,3.141,311,1.625,313,3.141,315,1.785,316,1.785,317,1.876,320,1.49,322,1.49,324,2.223,327,2.223,329,2.223,331,2.223,359,4.335,546,1.876,566,3.097,599,3.616,600,3.097,601,5.035,602,3.097,603,3.563,604,3.563,605,3.563,606,3.563,607,4.863,608,3.563,609,3.643,610,3.097,611,3.941,612,3.563,613,3.563,614,3.563,615,3.563,616,3.563]],["title/modules/RoomDetailModule.html",[106,1.16,617,2.831]],["body/modules/RoomDetailModule.html",[0,0.22,3,0.14,4,0.121,5,0.121,19,0.014,44,0.362,51,0.14,52,0.011,53,0.011,56,1.887,58,0.928,106,2.06,108,2.053,109,2.141,110,2.336,111,2.336,112,2.141,113,3.194,114,2.336,121,2.925,122,2.336,123,2.336,599,5.029,609,4.81,610,4.45,617,5.537,618,4.45,619,4.45,620,5.121,621,5.121]],["title/injectables/RoomDetailService.html",[66,1.001,609,2.459]],["body/injectables/RoomDetailService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,18,0.889,19,0.014,20,1.445,23,0.933,29,1.775,44,0.312,51,0.104,52,0.009,53,0.009,58,0.687,64,1.942,66,1.335,68,1.585,72,1.491,80,1.849,81,1.376,82,1.782,83,2.06,86,0.999,256,1.552,296,1.732,297,2.974,298,2.399,299,2.399,300,2.024,305,2.399,308,2.399,311,2.399,320,1.585,322,1.585,344,4.273,345,2.366,346,2.366,347,2.366,359,4.273,572,4.566,602,4.57,607,4.845,609,3.281,611,4.116,622,3.295,623,3.792,624,3.792,625,3.792,626,3.792,627,3.792]],["title/modules/RoomModule.html",[106,1.16,628,2.831]],["body/modules/RoomModule.html",[0,0.22,3,0.14,4,0.121,5,0.121,19,0.014,44,0.362,51,0.14,52,0.011,53,0.011,56,1.887,58,0.928,106,2.06,108,2.053,109,2.141,110,2.336,111,2.336,112,2.141,113,3.194,114,2.336,121,2.925,122,2.336,123,2.336,554,5.029,563,4.81,564,4.45,628,5.537,629,4.45,630,4.45,631,5.121,632,5.121]],["title/injectables/RoomService.html",[66,1.001,563,2.459]],["body/injectables/RoomService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,18,0.889,19,0.014,20,1.445,23,0.933,29,1.775,44,0.312,51,0.104,52,0.009,53,0.009,58,0.687,64,1.942,66,1.335,68,1.585,72,1.491,80,1.849,81,1.376,82,1.782,83,2.06,86,0.999,256,1.552,296,1.732,297,2.974,298,2.399,299,2.399,300,2.024,305,2.399,308,2.399,311,2.399,320,1.585,322,1.585,344,4.273,345,2.366,346,2.366,347,2.366,362,4.273,546,3.606,556,4.57,561,4.845,563,3.281,565,4.116,633,3.295,634,3.792,635,3.792,636,3.792,637,3.792,638,3.792]],["title/entities/RoomType.html",[252,1.348,548,2.314]],["body/entities/RoomType.html",[0,0.148,3,0.094,4,0.081,5,0.081,7,0.448,8,1.498,18,0.985,19,0.014,20,1.035,21,1.619,23,0.935,29,1.619,40,2.847,44,0.253,51,0.094,52,0.009,53,0.009,81,1.207,86,1.507,154,1.64,158,2.88,252,1.678,255,3.012,256,1.253,258,3.012,259,3.539,260,1.808,261,3.286,262,3.286,263,3.286,264,3.286,266,2.016,268,3.664,270,1.808,274,2.582,275,2.582,278,1.906,279,1.377,280,2.582,281,2.582,283,2.342,284,1.64,285,2.016,286,1.808,287,1.808,288,3.012,289,3.012,290,3.012,291,3.012,292,2.582,293,1.808,402,4.884,403,5.372,548,2.88,639,2.984,640,3.814,641,3.814,642,4.262,643,3.434,644,3.434,645,3.434,646,2.984,647,3.434,648,3.434,649,3.434,650,2.984]],["title/classes/RoomTypeAddNewDto.html",[0,0.169,651,2.628]],["body/classes/RoomTypeAddNewDto.html",[0,0.261,2,1.386,3,0.129,4,0.111,5,0.111,7,0.615,8,1.857,18,1.028,19,0.014,20,1.502,21,1.589,22,2.481,23,0.918,29,1.835,30,3.203,44,0.314,45,3.565,46,1.889,48,3.374,49,3.203,50,2.149,51,0.129,52,0.011,53,0.011,81,1.422,640,4.491,641,4.491,651,4.055,652,4.095,653,4.712,654,4.712,655,4.712]],["title/controllers/RoomTypeController.html",[54,1.16,656,2.831]],["body/controllers/RoomTypeController.html",[0,0.084,3,0.054,4,0.046,5,0.046,7,0.256,18,1.025,19,0.014,20,1.317,21,1.208,23,0.698,32,2.843,44,0.284,46,0.786,51,0.054,52,0.006,53,0.006,54,0.577,56,0.577,58,0.356,61,1.033,62,0.82,64,1.819,72,0.905,80,1.319,81,1.222,82,1.272,83,1.452,86,1.064,92,2.899,166,0.982,168,3.687,174,3.679,178,2.697,183,0.937,184,1.308,185,1.525,187,3.943,188,1.409,198,3.679,202,3.415,204,2.697,207,4.606,208,3.342,209,4.714,210,3.007,212,4.009,213,3.56,214,1.535,215,1.535,216,3.415,217,4.276,219,2.692,226,4.276,228,1.409,230,3.679,231,3.661,233,3.679,234,3.679,283,0.937,284,0.937,296,1.329,300,1.554,315,0.982,316,0.982,512,2.499,546,3.891,640,3.859,641,1.308,651,3.103,656,2.293,657,1.704,658,1.961,659,3.509,660,4.451,661,3.509,662,3.509,663,3.509,664,1.704,665,1.961,666,1.961,667,4.044,668,1.961,669,1.961,670,1.704,671,1.961,672,3.193,673,1.961,674,2.774,675,1.704,676,4.044,677,2.774,678,3.193,679,1.961,680,1.961,681,3.509,682,1.704,683,3.103,684,1.961,685,1.961,686,1.704,687,2.519,688,1.704,689,1.704,690,1.409,691,1.704,692,1.961,693,1.961,694,1.089,695,1.961,696,5.122,697,1.961,698,1.961,699,1.704,700,1.961,701,1.961,702,1.961,703,1.961,704,1.961,705,3.193,706,1.961,707,1.961,708,1.961,709,1.961,710,1.961,711,1.961,712,1.961,713,1.961]],["title/modules/RoomTypeModule.html",[106,1.16,119,2.628]],["body/modules/RoomTypeModule.html",[0,0.21,3,0.134,4,0.115,5,0.115,19,0.014,44,0.385,51,0.134,52,0.011,53,0.011,56,1.833,58,0.887,106,2.017,108,1.961,109,2.045,110,2.231,111,2.231,112,2.045,113,3.127,114,2.231,119,5.08,121,2.842,122,2.231,123,2.231,125,3.261,134,3.261,135,2.336,548,2.872,656,4.923,687,4.754,688,4.25,714,4.25,715,4.25,716,4.891,717,4.891,718,4.25,719,4.891]],["title/injectables/RoomTypeService.html",[66,1.001,687,2.459]],["body/injectables/RoomTypeService.html",[0,0.112,3,0.071,4,0.061,5,0.061,7,0.34,18,0.932,19,0.014,20,1.027,23,0.846,29,1.464,44,0.321,51,0.071,52,0.007,53,0.007,58,0.473,64,1.668,66,1.015,68,1.09,70,1.447,72,1.134,80,1.668,81,1.498,82,1.608,83,1.668,86,1.55,92,3.237,135,1.245,152,3.035,168,3.918,178,3.097,197,2.348,204,3.403,213,3.265,226,2.666,279,1.045,375,3.637,381,1.738,388,3.922,441,4.458,454,2.265,455,2.265,538,2.04,540,3.475,546,2.872,548,3.915,640,3.243,641,2.666,651,3.637,659,3.475,660,4.74,661,3.475,662,3.475,663,3.475,664,3.475,667,4.227,670,3.475,674,5.112,675,3.475,676,5.112,677,2.265,681,3.475,682,3.475,683,3.637,687,3.403,689,2.265,691,2.265,699,2.265,718,2.265,720,2.265,721,2.607,722,2.607,723,2.607,724,2.607,725,2.607,726,2.607,727,2.607,728,2.607,729,4.864,730,3.999,731,4.864,732,2.607,733,2.607,734,2.607,735,2.607,736,2.607,737,2.607,738,3.475,739,2.607,740,2.607,741,2.607,742,2.607,743,2.607]],["title/entities/Service.html",[252,1.348,744,2.628]],["body/entities/Service.html",[0,0.148,3,0.095,4,0.081,5,0.081,7,0.45,8,1.503,18,0.986,19,0.014,20,1.039,21,1.622,23,0.937,29,1.475,40,2.853,44,0.296,51,0.095,52,0.009,53,0.009,81,1.211,86,1.511,154,1.648,252,1.684,255,3.02,256,1.257,258,3.02,259,3.544,260,1.817,261,3.293,262,3.293,263,3.293,264,3.293,266,2.026,268,3.883,270,1.817,272,2.026,274,2.591,275,2.591,276,2.89,278,1.915,279,1.384,280,2.591,281,2.591,283,2.35,284,1.648,285,2.026,286,1.817,287,1.817,288,3.02,289,3.02,290,3.02,291,3.02,292,2.591,293,1.817,548,4.154,553,2.999,744,3.281,745,2.999,746,5.736,747,3.451,748,3.451,749,3.451,750,3.451,751,4.277,752,4.277,753,3.451,754,3.451]],["title/controllers/ServicesController.html",[54,1.16,755,2.831]],["body/controllers/ServicesController.html",[0,0.154,3,0.098,4,0.084,5,0.084,7,0.467,18,0.867,19,0.014,20,1.567,21,1.582,23,0.914,44,0.329,51,0.098,52,0.009,53,0.009,54,1.054,56,1.054,58,0.649,61,1.886,62,1.497,64,1.901,72,1.433,80,1.803,81,1.342,82,1.738,83,1.901,166,1.794,183,2.413,185,2.796,256,1.525,296,1.664,297,2.901,298,2.305,299,2.305,300,1.945,305,1.634,306,3.152,308,1.634,309,3.152,311,1.634,313,3.152,315,1.794,316,1.794,317,1.886,320,1.497,322,1.497,324,2.234,327,2.234,329,2.234,331,2.234,365,4.342,755,3.629,756,3.112,757,2.803,758,3.112,759,3.581,760,3.581,761,3.581,762,3.581,763,4.87,764,3.581,765,3.653,766,3.112,767,3.955,768,3.112,769,3.581,770,3.581,771,3.581,772,3.581,773,3.581]],["title/modules/ServicesModule.html",[106,1.16,774,2.831]],["body/modules/ServicesModule.html",[0,0.22,3,0.14,4,0.121,5,0.121,19,0.014,44,0.362,51,0.14,52,0.011,53,0.011,56,1.887,58,0.928,106,2.06,108,2.053,109,2.141,110,2.336,111,2.336,112,2.141,113,3.194,114,2.336,121,2.925,122,2.336,123,2.336,755,5.029,765,4.81,766,4.45,774,5.537,775,4.45,776,4.45,777,5.121,778,5.121]],["title/injectables/ServicesService.html",[66,1.001,765,2.459]],["body/injectables/ServicesService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,18,0.889,19,0.014,20,1.445,23,0.933,29,1.775,44,0.312,51,0.104,52,0.009,53,0.009,58,0.687,64,1.942,66,1.335,68,1.585,72,1.491,80,1.849,81,1.376,82,1.782,83,2.06,86,0.999,256,1.552,296,1.732,297,2.974,298,2.399,299,2.399,300,2.024,305,2.399,308,2.399,311,2.399,320,1.585,322,1.585,344,4.273,345,2.366,346,2.366,347,2.366,365,4.273,744,4.347,757,2.968,758,4.57,763,4.845,765,3.281,767,4.116,779,3.295,780,3.792,781,3.792,782,3.792,783,3.792,784,3.792]],["title/entities/ServicesUsed.html",[252,1.348,588,2.628]],["body/entities/ServicesUsed.html",[0,0.148,3,0.094,4,0.081,5,0.081,7,0.449,8,1.5,18,0.985,19,0.014,21,1.62,23,0.936,29,1.474,40,2.85,44,0.323,51,0.094,52,0.009,53,0.009,86,1.509,154,1.644,252,1.681,255,3.016,258,3.016,259,3.541,260,1.813,261,3.289,262,3.289,263,3.289,264,3.289,268,3.364,270,1.813,272,2.885,274,2.587,275,2.587,276,3.364,278,1.911,279,1.38,280,2.587,281,2.587,283,2.346,284,1.644,286,1.813,287,1.813,288,3.016,289,3.016,290,3.016,291,3.016,292,2.587,293,1.813,572,4.714,588,4.405,744,4.714,785,2.991,786,5.729,787,3.442,788,3.442,789,3.442,790,3.442,791,3.442,792,3.442,793,3.442,794,3.442,795,3.442,796,3.442]],["title/controllers/ServicesUsedController.html",[54,1.16,797,2.831]],["body/controllers/ServicesUsedController.html",[0,0.153,3,0.098,4,0.084,5,0.084,7,0.465,18,0.865,19,0.014,20,1.565,21,1.579,23,0.912,44,0.328,51,0.098,52,0.009,53,0.009,54,1.048,56,1.048,58,0.646,61,1.876,62,1.49,64,1.898,72,1.428,80,1.799,81,1.339,82,1.734,83,1.898,166,1.785,183,2.404,185,2.788,256,1.522,296,1.658,297,2.894,298,2.297,299,2.297,300,1.938,305,1.625,306,3.141,308,1.625,309,3.141,311,1.625,313,3.141,315,1.785,316,1.785,317,1.876,320,1.49,322,1.49,324,2.223,327,2.223,329,2.223,331,2.223,368,4.335,757,2.789,768,3.097,797,3.616,798,3.097,799,5.035,800,3.097,801,3.563,802,3.563,803,3.563,804,3.563,805,4.863,806,3.563,807,3.643,808,3.097,809,3.941,810,3.563,811,3.563,812,3.563,813,3.563,814,3.563]],["title/modules/ServicesUsedModule.html",[106,1.16,815,2.831]],["body/modules/ServicesUsedModule.html",[0,0.22,3,0.14,4,0.121,5,0.121,19,0.014,44,0.362,51,0.14,52,0.011,53,0.011,56,1.887,58,0.928,106,2.06,108,2.053,109,2.141,110,2.336,111,2.336,112,2.141,113,3.194,114,2.336,121,2.925,122,2.336,123,2.336,797,5.029,807,4.81,808,4.45,815,5.537,816,4.45,817,4.45,818,5.121,819,5.121]],["title/injectables/ServicesUsedService.html",[66,1.001,807,2.459]],["body/injectables/ServicesUsedService.html",[0,0.163,3,0.104,4,0.089,5,0.089,7,0.495,18,0.889,19,0.014,20,1.445,23,0.933,29,1.775,44,0.312,51,0.104,52,0.009,53,0.009,58,0.687,64,1.942,66,1.335,68,1.585,72,1.491,80,1.849,81,1.376,82,1.782,83,2.06,86,0.999,256,1.552,296,1.732,297,2.974,298,2.399,299,2.399,300,2.024,305,2.399,308,2.399,311,2.399,320,1.585,322,1.585,344,4.273,345,2.366,346,2.366,347,2.366,368,4.273,588,4.566,800,4.57,805,4.845,807,3.281,809,4.116,820,3.295,821,3.792,822,3.792,823,3.792,824,3.792,825,3.792]],["title/classes/UpdateBillDto.html",[0,0.169,312,2.628]],["body/classes/UpdateBillDto.html",[0,0.246,2,1.683,3,0.157,4,0.135,5,0.135,19,0.014,44,0.355,51,0.157,52,0.012,53,0.012,296,1.883,302,3.568,312,4.576,321,4.476,349,4.476,694,3.175,826,4.97,827,4.281,828,6.863,829,3.568,830,3.358]],["title/classes/UpdateManageDto.html",[0,0.169,414,2.628]],["body/classes/UpdateManageDto.html",[0,0.246,2,1.683,3,0.157,4,0.135,5,0.135,19,0.014,44,0.355,51,0.157,52,0.012,53,0.012,296,1.883,350,3.568,352,4.476,414,4.576,418,4.476,694,3.175,827,4.281,829,3.568,830,3.358,831,4.97,832,6.863]],["title/classes/UpdateRole.html",[0,0.169,485,2.628]],["body/classes/UpdateRole.html",[0,0.27,2,1.459,3,0.136,4,0.117,5,0.117,7,0.647,8,1.919,18,0.989,19,0.014,20,1.531,21,1.483,22,2.611,23,0.856,29,1.711,30,2.611,44,0.325,45,3.456,46,1.989,48,3.148,49,3.309,50,2.262,51,0.136,52,0.011,53,0.011,81,1.456,256,1.511,355,3.562,485,4.19,833,5.995,834,4.959,835,4.959]],["title/classes/UpdateRoomDetailDto.html",[0,0.169,607,2.628]],["body/classes/UpdateRoomDetailDto.html",[0,0.246,2,1.683,3,0.157,4,0.135,5,0.135,19,0.014,44,0.355,51,0.157,52,0.012,53,0.012,296,1.883,359,3.568,361,4.476,607,4.576,611,4.476,694,3.175,827,4.281,829,3.568,830,3.358,836,4.97,837,6.863]],["title/classes/UpdateRoomDto.html",[0,0.169,561,2.628]],["body/classes/UpdateRoomDto.html",[0,0.246,2,1.683,3,0.157,4,0.135,5,0.135,19,0.014,44,0.355,51,0.157,52,0.012,53,0.012,296,1.883,362,3.568,364,4.476,561,4.576,565,4.476,694,3.175,827,4.281,829,3.568,830,3.358,838,4.97,839,6.863]],["title/classes/UpdateRoomTypeDto.html",[0,0.169,683,2.628]],["body/classes/UpdateRoomTypeDto.html",[0,0.251,2,1.304,3,0.121,4,0.105,5,0.105,7,0.578,8,1.785,18,1.047,19,0.014,20,1.621,21,1.64,22,3.077,23,0.947,29,1.812,30,2.334,44,0.302,45,3.619,46,1.777,48,2.927,49,3.443,50,2.022,51,0.121,52,0.01,53,0.01,81,1.38,640,4.36,641,4.36,683,3.897,738,5.682,840,3.852,841,4.432,842,4.432,843,4.432,844,4.432,845,4.432,846,5.844]],["title/classes/UpdateServiceDto.html",[0,0.169,763,2.628]],["body/classes/UpdateServiceDto.html",[0,0.246,2,1.683,3,0.157,4,0.135,5,0.135,19,0.014,44,0.355,51,0.157,52,0.012,53,0.012,296,1.883,365,3.568,367,4.476,694,3.175,763,4.576,767,4.476,827,4.281,829,3.568,830,3.358,847,4.97,848,6.863]],["title/classes/UpdateServicesUsedDto.html",[0,0.169,805,2.628]],["body/classes/UpdateServicesUsedDto.html",[0,0.246,2,1.683,3,0.157,4,0.135,5,0.135,19,0.014,44,0.355,51,0.157,52,0.012,53,0.012,296,1.883,368,3.568,370,4.476,694,3.175,805,4.576,809,4.476,827,4.281,829,3.568,830,3.358,849,4.97,850,6.863]],["title/entities/User.html",[175,1.648,252,1.348]],["body/entities/User.html",[0,0.167,3,0.069,4,0.059,5,0.059,7,0.327,8,1.184,9,2.96,10,2.96,11,2.498,12,3.163,13,2.96,14,2.498,15,2.96,16,2.96,17,2.164,18,1.006,19,0.014,20,1.543,21,1.705,23,0.985,29,1.441,40,2.436,44,0.276,50,1.143,51,0.069,52,0.007,53,0.007,86,1.25,154,1.197,158,3.136,175,1.621,241,3.082,252,1.327,255,2.498,256,1.039,258,2.498,259,3.191,260,1.319,261,2.812,262,2.812,263,2.812,264,2.812,266,1.471,268,4.054,270,1.319,272,1.471,274,2.042,275,2.042,276,2.277,278,1.391,279,1.005,280,2.042,281,2.042,283,1.852,284,1.197,285,1.471,286,1.319,287,1.319,288,2.498,289,2.498,290,2.498,291,2.498,292,2.042,293,1.319,402,5.658,403,5.954,642,5.537,646,3.37,650,3.37,690,1.8,751,3.37,752,3.37,851,2.177,852,2.506,853,2.506,854,2.506,855,2.506,856,2.506,857,2.506,858,2.506,859,2.506,860,2.506,861,2.506,862,3.878,863,2.506,864,2.506,865,2.506,866,2.506,867,1.961,868,1.961,869,2.177,870,2.177]],["title/classes/UserBackendDto.html",[0,0.169,871,2.831]],["body/classes/UserBackendDto.html",[0,0.206,2,0.98,3,0.091,4,0.079,5,0.079,7,0.434,8,1.465,9,3.508,10,3.508,11,2.961,13,3.508,14,2.961,15,3.508,16,3.508,17,2.565,18,1.075,19,0.014,20,1.699,21,1.722,22,3.434,23,0.995,26,3.445,29,1.788,30,2.526,31,3.754,32,3.121,33,3.754,34,3.445,36,3.754,37,3.754,40,2.188,41,2.893,44,0.248,45,3.711,46,1.335,47,4.038,48,2.816,49,3.577,50,1.519,51,0.091,52,0.008,53,0.008,444,3.749,871,3.445,872,2.893,873,3.329,874,3.329,875,3.329,876,3.329,877,3.329,878,3.329,879,3.329,880,3.329,881,3.329]],["title/controllers/UserController.html",[54,1.16,882,2.831]],["body/controllers/UserController.html",[0,0.081,1,3.275,3,0.085,4,0.045,5,0.045,7,0.247,11,2.401,17,2.08,18,0.621,19,0.014,20,1.399,21,1.187,23,0.686,29,0.93,32,2.793,44,0.279,46,0.76,51,0.052,52,0.005,53,0.005,54,0.558,56,0.558,58,0.344,62,0.793,64,1.798,70,1.052,72,0.88,75,5.864,80,1.293,81,0.962,82,1.246,83,1.426,85,4.66,86,1.325,90,1.362,92,2.982,152,1.183,166,0.95,168,3.657,172,3.275,174,3.613,175,3.071,178,2.649,183,1.483,184,1.264,185,0.905,187,3.881,188,1.362,197,1.113,198,3.613,202,3.354,204,2.649,207,4.555,208,3.275,209,4.555,210,2.954,213,3.52,216,3.354,217,3.97,219,2.63,221,2.43,226,3.804,228,1.362,230,3.613,231,3.354,233,3.613,234,3.613,256,0.864,300,1.518,315,1.555,316,0.95,317,2.401,378,2.189,444,3.04,452,3.569,491,1.647,497,1.647,512,1.484,686,1.647,882,2.23,883,1.647,884,1.896,885,3.427,886,3.427,887,4.372,888,3.427,889,3.944,890,1.896,891,3.427,892,1.896,893,3.105,894,1.896,895,1.896,896,5.954,897,3.105,898,1.896,899,1.896,900,1.896,901,1.647,902,3.105,903,1.896,904,1.896,905,3.04,906,4.372,907,1.896,908,1.896,909,3.105,910,3.944,911,1.647,912,1.896,913,1.647,914,1.896,915,1.896,916,3.962,917,1.896,918,5.031,919,1.896,920,3.105,921,1.896,922,1.896,923,1.896,924,1.647,925,1.896,926,1.896,927,3.105,928,1.896,929,1.896,930,1.896,931,1.896]],["title/classes/UserLogin.html",[0,0.169,173,2.628]],["body/classes/UserLogin.html",[0,0.269,2,1.449,3,0.135,4,0.116,5,0.116,7,0.642,8,1.911,14,3.621,17,3.137,18,0.986,19,0.014,20,1.657,21,1.476,22,2.593,23,0.853,44,0.323,45,3.444,46,1.975,48,2.467,49,3.621,50,2.246,51,0.135,52,0.011,53,0.011,173,4.172,690,3.537,867,3.855,932,4.28,933,4.28,934,4.925,935,4.925,936,4.925,937,4.925,938,4.28]],["title/modules/UserModule.html",[106,1.16,120,2.628]],["body/modules/UserModule.html",[0,0.174,3,0.111,4,0.096,5,0.096,19,0.014,44,0.399,51,0.111,52,0.01,53,0.01,56,1.619,58,0.735,106,1.839,108,1.625,109,1.694,110,1.848,111,1.848,112,1.694,113,2.851,114,1.848,120,5.018,121,2.511,122,1.848,123,1.848,125,3.67,131,4.308,132,5.248,133,2.91,134,2.702,135,1.935,143,3.172,144,3.172,158,2.379,175,1.694,238,3.521,239,2.702,241,2.511,244,3.521,245,3.521,246,3.521,247,3.172,248,3.521,249,3.521,250,3.521,251,3.521,378,4.014,437,3.808,478,4.167,868,3.172,882,4.489,911,3.521,939,3.521,940,3.521,941,4.052,942,4.052,943,3.521,944,4.052,945,4.052]],["title/classes/UserRegister.html",[0,0.169,180,2.628]],["body/classes/UserRegister.html",[0,0.209,2,0.996,3,0.093,4,0.08,5,0.08,7,0.442,8,1.482,9,3.541,10,3.541,11,2.988,12,3.784,13,3.541,14,2.988,15,3.541,16,3.541,17,2.589,18,1.077,19,0.014,20,1.716,21,1.729,22,3.456,23,0.999,26,2.431,29,1.698,30,1.782,36,3.799,37,3.799,44,0.251,45,3.725,46,1.357,47,3.486,48,2.843,49,3.704,50,1.544,51,0.093,52,0.008,53,0.008,180,3.236,690,2.431,867,2.649,869,2.941,870,2.941,933,2.941,938,2.941,946,2.941,947,3.385,948,3.385,949,3.385,950,3.385,951,3.385,952,3.385,953,3.385,954,3.385,955,3.385,956,3.385]],["title/injectables/UserService.html",[66,1.001,378,2.188]],["body/injectables/UserService.html",[0,0.082,3,0.052,4,0.045,5,0.045,7,0.248,11,2.847,14,1,17,2.717,18,0.686,19,0.015,20,1.4,23,0.737,34,1.363,44,0.319,51,0.052,52,0.005,53,0.005,58,0.344,62,1.3,64,1.119,66,0.789,68,0.794,70,2.191,72,0.881,80,1.428,81,1.063,82,1.376,83,1.428,85,4.826,86,1.671,92,3.433,135,0.907,152,1.184,158,1.115,168,3.609,175,2.491,178,2.651,197,1.825,202,3.043,203,1.486,204,3.247,213,3.522,216,2.632,217,2.632,219,1.266,239,1.266,241,2.604,247,2.433,256,1.424,279,0.761,317,1,374,1.486,375,3.806,376,4.96,378,2.533,381,1.266,382,2.233,384,1.486,388,4.23,395,3.966,437,2.079,441,3.616,443,1.486,452,2.433,538,3.572,539,1.65,868,1.486,871,3.278,885,2.701,886,2.701,887,4.375,888,2.701,896,5.514,901,2.701,905,2.632,906,3.966,913,1.65,916,1.65,924,3.43,943,1.65,957,1.65,958,3.109,959,1.898,960,3.109,961,1.898,962,3.109,963,5.035,964,1.898,965,1.898,966,1.898,967,1.898,968,1.898,969,3.109,970,3.109,971,5.035,972,1.898,973,1.898,974,1.898,975,5.035,976,1.898,977,1.898,978,1.898,979,1.898,980,1.898,981,1.898,982,1.898,983,1.898,984,3.109,985,1.898,986,1.898,987,1.898,988,3.109,989,1.898,990,1.898,991,1.898,992,5.957,993,3.109,994,4.563,995,3.109,996,3.109,997,3.109,998,3.109,999,3.109,1000,3.948,1001,1.898,1002,1.898,1003,1.898,1004,3.109,1005,1.898,1006,1.898,1007,1.898,1008,1.898]],["title/classes/UserUpdate.html",[0,0.169,905,2.628]],["body/classes/UserUpdate.html",[0,0.21,2,1.006,3,0.094,4,0.081,5,0.081,7,0.446,8,1.493,9,3.56,10,3.56,11,3.004,12,3.804,13,3.56,15,3.56,16,3.56,17,2.603,18,1.074,19,0.014,20,1.703,21,1.733,22,3.469,23,1.001,26,2.454,29,1.758,30,2.573,31,3.825,32,2.713,33,3.825,34,3.51,44,0.253,45,3.679,46,1.37,47,3.51,48,3.3,49,3.608,50,1.559,51,0.094,52,0.008,53,0.008,82,1.336,256,1.25,905,3.259,1009,2.97,1010,3.417,1011,3.417,1012,3.417,1013,3.417,1014,3.417,1015,3.417,1016,3.417,1017,3.417,1018,3.417]],["title/coverage.html",[1019,4.693]],["body/coverage.html",[0,0.33,1,1.735,5,0.057,6,2.099,18,0.329,19,0.014,52,0.007,53,0.007,54,2.049,55,1.735,57,2.099,59,1.611,66,1.821,67,1.735,69,2.099,86,0.636,112,1.01,160,2.099,164,1.735,165,2.099,173,1.611,175,1.01,180,1.611,189,1.507,191,1.507,210,4.82,241,1.102,252,2.286,253,1.507,254,2.099,294,1.735,295,2.099,302,1.507,312,1.611,318,1.507,338,2.099,348,2.099,349,2.951,350,1.507,351,2.099,352,2.951,353,1.611,354,2.099,355,3.33,359,1.507,360,2.099,361,2.951,362,1.507,363,2.099,364,2.951,365,1.507,366,2.099,367,2.951,368,1.507,369,2.099,370,2.951,371,1.891,372,2.099,373,2.099,378,1.341,397,1.611,398,2.099,407,1.735,408,2.099,414,1.611,416,1.507,430,2.099,436,2.099,437,1.272,465,2.951,472,3.276,478,1.611,479,2.099,485,1.611,528,2.099,546,1.272,547,2.099,548,1.419,554,1.735,555,2.099,561,1.611,563,1.507,572,1.611,573,2.099,588,1.611,599,1.735,600,2.099,607,1.611,609,1.507,622,2.099,633,2.099,639,2.099,651,1.611,652,2.099,656,1.735,657,2.099,683,1.611,687,1.507,720,2.099,744,1.611,745,2.099,755,1.735,756,2.099,763,1.611,765,1.507,779,2.099,785,2.099,797,1.735,798,2.099,805,1.611,807,1.507,820,2.099,826,2.099,831,2.099,833,2.099,836,2.099,838,2.099,840,2.099,847,2.099,849,2.099,851,2.099,871,1.735,872,2.099,882,1.735,883,2.099,905,1.611,932,2.099,946,2.099,957,2.099,1009,2.099,1019,2.099,1020,2.099,1021,2.416,1022,2.416,1023,7.753,1024,3.77,1025,2.099,1026,6.287,1027,5.238,1028,7.331,1029,2.099,1030,4.636,1031,2.416,1032,2.416,1033,2.416,1034,2.416]],["title/dependencies.html",[109,1.984,1035,2.851]],["body/dependencies.html",[0,0.215,19,0.014,46,2.01,50,2.286,52,0.011,53,0.011,58,0.909,90,3.6,109,2.095,133,3.6,135,2.393,239,3.342,279,2.01,283,2.393,284,3.021,382,3.6,694,2.782,830,2.943,1036,6.933,1037,5.012,1038,5.012,1039,5.012,1040,5.012,1041,5.012,1042,5.012,1043,5.012,1044,5.012,1045,5.012,1046,5.012,1047,5.012,1048,5.012,1049,5.012,1050,5.012,1051,5.012,1052,5.012,1053,5.012,1054,5.012,1055,5.012,1056,5.012,1057,5.012,1058,5.012,1059,5.012,1060,5.012]],["title/miscellaneous/functions.html",[1061,2.851,1062,4.125]],["body/miscellaneous/functions.html",[7,0.768,19,0.013,52,0.012,53,0.012,80,1.669,81,1.242,82,1.608,112,3.112,259,2.948,465,4.606,473,5.114,474,6.066,1025,5.114,1029,6.066,1061,5.114,1062,5.114,1063,5.886,1064,5.886]],["title/index.html",[7,0.428,1065,3.281,1066,3.281]],["body/index.html",[4,0.136,9,2.723,10,2.723,11,2.298,12,2.91,13,2.723,14,3.046,15,2.723,16,2.723,17,2.639,19,0.01,20,1.664,29,1.696,52,0.01,53,0.01,81,1.221,86,1.15,94,5.027,108,2.602,169,3.416,175,2.418,183,3.299,185,3.099,241,3.279,256,1.575,300,1.68,315,2.186,316,2.186,480,5.639,506,3.792,891,3.792,1020,5.027,1067,4.364,1068,4.364,1069,4.364,1070,4.364,1071,5.785,1072,4.364,1073,4.364,1074,4.364,1075,4.364,1076,4.364,1077,4.364,1078,4.364,1079,4.364,1080,4.364,1081,4.364,1082,4.364,1083,4.364,1084,4.364,1085,4.364,1086,4.364,1087,4.364,1088,5.785,1089,5.785,1090,5.027,1091,5.785,1092,5.785,1093,4.364,1094,4.364,1095,4.364,1096,4.364,1097,4.364]],["title/modules.html",[108,2.166]],["body/modules.html",[19,0.011,52,0.011,53,0.011,107,3.678,108,2.053,117,3.414,118,3.414,119,3.414,120,3.414,333,3.678,425,3.678,617,3.678,628,3.678,774,3.678,815,3.678,1098,8.081,1099,8.081,1100,8.081,1101,8.081]],["title/overview.html",[1102,4.693]],["body/overview.html",[2,1.119,19,0.014,52,0.009,53,0.009,56,1.119,68,1.59,106,1.119,107,5.473,108,1.525,109,1.59,110,1.734,111,1.734,112,1.59,113,1.734,114,1.734,115,3.304,116,3.304,117,4.849,118,4.571,119,4.571,120,4.849,121,2.403,122,1.734,123,1.734,154,1.816,189,3.772,191,3.772,235,3.304,236,3.304,318,3.772,333,4.688,334,3.304,335,3.304,378,3.356,416,3.772,425,4.688,426,3.304,427,3.304,437,3.437,522,3.304,523,3.304,563,3.772,609,3.772,617,4.688,618,3.304,619,3.304,628,4.688,629,3.304,630,3.304,687,3.772,714,3.304,715,3.304,765,3.772,774,4.688,775,3.304,776,3.304,807,3.772,815,4.688,816,3.304,817,3.304,939,3.304,940,3.304,1102,3.304,1103,5.269,1104,3.802,1105,3.802,1106,3.802]],["title/properties.html",[8,1.449,1035,2.851]],["body/properties.html",[8,1.867,19,0.014,52,0.012,53,0.012,1090,5.313,1107,6.114,1108,6.114,1109,6.114,1110,6.114,1111,6.114]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1108,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["0.5.30",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["0.5.33",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":32,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AuthController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserUpdate.html":{}}}],["1.0.1",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1103,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1105,"title":{},"body":{"overview.html":{}}}],["22",{"_index":1106,"title":{},"body":{"overview.html":{}}}],["3",{"_index":34,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{}}}],["3.2.2",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":445,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/RoleService.html":{}}}],["5.1.1",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":37,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{}}}],["8.11.5",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1104,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["access_token",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["action",{"_index":344,"title":{},"body":{"injectables/BillService.html":{},"injectables/ManageService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{}}}],["add",{"_index":891,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["addnewroomtype",{"_index":659,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["addnewroomtype(@body",{"_index":712,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["addnewroomtype(roomtypedata",{"_index":664,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["addnewuser",{"_index":885,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addnewuser(@param(\"roleid",{"_index":923,"title":{},"body":{"controllers/UserController.html":{}}}],["addnewuser(roleid",{"_index":890,"title":{},"body":{"controllers/UserController.html":{}}}],["addnewuser(userdata",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["addnewuserdto",{"_index":1,"title":{"classes/AddNewUserDto.html":{}},"body":{"classes/AddNewUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["adds",{"_index":345,"title":{},"body":{"injectables/BillService.html":{},"injectables/ManageService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{}}}],["admin",{"_index":1005,"title":{},"body":{"injectables/UserService.html":{}}}],["admin.role.id",{"_index":1006,"title":{},"body":{"injectables/UserService.html":{}}}],["adminid",{"_index":1004,"title":{},"body":{"injectables/UserService.html":{}}}],["afterupdate",{"_index":471,"title":{},"body":{"entities/Role.html":{}}}],["again",{"_index":982,"title":{},"body":{"injectables/UserService.html":{}}}],["agent",{"_index":99,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["allow",{"_index":897,"title":{},"body":{"controllers/UserController.html":{}}}],["allowed",{"_index":1007,"title":{},"body":{"injectables/UserService.html":{}}}],["allows",{"_index":902,"title":{},"body":{"controllers/UserController.html":{}}}],["allroomtype",{"_index":729,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["alluser",{"_index":916,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["alluser[0",{"_index":976,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":454,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/RoomTypeService.html":{}}}],["api",{"_index":1069,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":45,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["apitags",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["apitags(\"auth",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"room_type",{"_index":693,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["apitags('role",{"_index":505,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('user",{"_index":915,"title":{},"body":{"controllers/UserController.html":{}}}],["app.service",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":55,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apploggermiddleware",{"_index":67,"title":{"injectables/AppLoggerMiddleware.html":{}},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":107,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":59,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":1087,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":164,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{}}}],["authentication_token",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":117,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1111,"title":{},"body":{"properties.html":{}}}],["await",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["badrequestexception",{"_index":441,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"injectables/UserService.html":{}}}],["badrequestexception({message",{"_index":450,"title":{},"body":{"injectables/RegisterService.html":{}}}],["baseurl",{"_index":95,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["bcrypt",{"_index":382,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(userinfo.password",{"_index":391,"title":{},"body":{"injectables/LoginService.html":{}}}],["bcrypt.hash(password",{"_index":462,"title":{},"body":{"injectables/RegisterService.html":{}}}],["beforeinsert",{"_index":274,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["beforeupdate",{"_index":275,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["between",{"_index":677,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["between(mincapacity",{"_index":735,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["bill",{"_index":253,"title":{"entities/Bill.html":{}},"body":{"entities/Bill.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"entities/RoomDetail.html":{},"coverage.html":{}}}],["bill.controller",{"_index":337,"title":{},"body":{"modules/BillModule.html":{}}}],["bill.dto",{"_index":321,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/UpdateBillDto.html":{}}}],["bill.dto.ts",{"_index":349,"title":{},"body":{"classes/CreateBillDto.html":{},"classes/UpdateBillDto.html":{},"coverage.html":{}}}],["bill.service",{"_index":319,"title":{},"body":{"controllers/BillController.html":{},"modules/BillModule.html":{}}}],["bill/entities/bill.entity",{"_index":597,"title":{},"body":{"entities/RoomDetail.html":{}}}],["billcontroller",{"_index":294,"title":{"controllers/BillController.html":{}},"body":{"controllers/BillController.html":{},"modules/BillModule.html":{},"coverage.html":{}}}],["billmodule",{"_index":333,"title":{"modules/BillModule.html":{}},"body":{"modules/BillModule.html":{},"modules.html":{},"overview.html":{}}}],["billservice",{"_index":318,"title":{"injectables/BillService.html":{}},"body":{"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brcypt",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["browse",{"_index":1101,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1098,"title":{},"body":{"modules.html":{}}}],["capacity",{"_index":640,"title":{},"body":{"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"classes/UpdateRoomTypeDto.html":{}}}],["cascade",{"_index":752,"title":{},"body":{"entities/Service.html":{},"entities/User.html":{}}}],["catch",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["check",{"_index":446,"title":{},"body":{"injectables/RegisterService.html":{}}}],["check_in",{"_index":574,"title":{},"body":{"entities/RoomDetail.html":{}}}],["check_out",{"_index":575,"title":{},"body":{"entities/RoomDetail.html":{}}}],["city",{"_index":9,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddNewUserDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_billmodule",{"_index":334,"title":{},"body":{"modules/BillModule.html":{},"overview.html":{}}}],["cluster_billmodule_providers",{"_index":335,"title":{},"body":{"modules/BillModule.html":{},"overview.html":{}}}],["cluster_managemodule",{"_index":426,"title":{},"body":{"modules/ManageModule.html":{},"overview.html":{}}}],["cluster_managemodule_providers",{"_index":427,"title":{},"body":{"modules/ManageModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":522,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":523,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_roomdetailmodule",{"_index":618,"title":{},"body":{"modules/RoomDetailModule.html":{},"overview.html":{}}}],["cluster_roomdetailmodule_providers",{"_index":619,"title":{},"body":{"modules/RoomDetailModule.html":{},"overview.html":{}}}],["cluster_roommodule",{"_index":629,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roommodule_providers",{"_index":630,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roomtypemodule",{"_index":714,"title":{},"body":{"modules/RoomTypeModule.html":{},"overview.html":{}}}],["cluster_roomtypemodule_providers",{"_index":715,"title":{},"body":{"modules/RoomTypeModule.html":{},"overview.html":{}}}],["cluster_servicesmodule",{"_index":775,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_providers",{"_index":776,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesusedmodule",{"_index":816,"title":{},"body":{"modules/ServicesUsedModule.html":{},"overview.html":{}}}],["cluster_servicesusedmodule_providers",{"_index":817,"title":{},"body":{"modules/ServicesUsedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":939,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":940,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":268,"title":{},"body":{"entities/Bill.html":{},"entities/Role.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":642,"title":{},"body":{"entities/RoomType.html":{},"entities/User.html":{}}}],["column({unique",{"_index":646,"title":{},"body":{"entities/RoomType.html":{},"entities/User.html":{}}}],["compodoc/compodoc",{"_index":1080,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1074,"title":{},"body":{"index.html":{}}}],["condition",{"_index":896,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["configmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["configmodule.forroot",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configservice",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["configservice.get(\"expire_in",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["configservice.get(\"jwt_key",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["configservice.get('db_host",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_name",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_user",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(\"auth.controller.ts",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.error(\"role.controller.ts",{"_index":509,"title":{},"body":{"controllers/RoleController.html":{}}}],["console.error(\"room_type.controller.ts",{"_index":696,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["console.error(\"user.controller.ts",{"_index":918,"title":{},"body":{"controllers/UserController.html":{}}}],["console.error(\"user.sevice.ts",{"_index":977,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"auth.controller.ts",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(roleid",{"_index":514,"title":{},"body":{"controllers/RoleController.html":{}}}],["const",{"_index":92,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["constructor(roleservice",{"_index":529,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roomtypeservice",{"_index":721,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["constructor(userservice",{"_index":374,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["consumer",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(apploggermiddleware).forroutes",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["contentlength",{"_index":102,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["controller",{"_index":54,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('bill",{"_index":323,"title":{},"body":{"controllers/BillController.html":{}}}],["controller('manage",{"_index":419,"title":{},"body":{"controllers/ManageController.html":{}}}],["controller('room",{"_index":566,"title":{},"body":{"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{}}}],["controller('services",{"_index":768,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["controller('v1/auth",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('v1/role",{"_index":504,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('v1/room",{"_index":692,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["controller('v1/user",{"_index":914,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["converttz",{"_index":1029,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["converttz(date",{"_index":473,"title":{},"body":{"entities/Role.html":{},"miscellaneous/functions.html":{}}}],["cookie",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":906,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cookies[\"access_token",{"_index":993,"title":{},"body":{"injectables/UserService.html":{}}}],["country",{"_index":10,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["coverage",{"_index":1019,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":296,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{}}}],["create(@body",{"_index":324,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["create(createbilldto",{"_index":301,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{}}}],["create(createmanagedto",{"_index":409,"title":{},"body":{"controllers/ManageController.html":{},"injectables/ManageService.html":{}}}],["create(createroomdetaildto",{"_index":602,"title":{},"body":{"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{}}}],["create(createroomdto",{"_index":556,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["create(createservicedto",{"_index":758,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["create(createservicesuseddto",{"_index":800,"title":{},"body":{"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["createbilldto",{"_index":302,"title":{"classes/CreateBillDto.html":{}},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/UpdateBillDto.html":{},"coverage.html":{}}}],["created",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RoleService.html":{}}}],["createdat",{"_index":255,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":280,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["createdatecolumn({type",{"_index":260,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["createmanagedto",{"_index":350,"title":{"classes/CreateManageDto.html":{}},"body":{"classes/CreateManageDto.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"classes/UpdateManageDto.html":{},"coverage.html":{}}}],["createrole",{"_index":481,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["createrole(@body",{"_index":510,"title":{},"body":{"controllers/RoleController.html":{}}}],["createrole(roledata",{"_index":486,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["createroledto",{"_index":353,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createroomdetaildto",{"_index":359,"title":{"classes/CreateRoomDetailDto.html":{}},"body":{"classes/CreateRoomDetailDto.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"classes/UpdateRoomDetailDto.html":{},"coverage.html":{}}}],["createroomdto",{"_index":362,"title":{"classes/CreateRoomDto.html":{}},"body":{"classes/CreateRoomDto.html":{},"controllers/RoomController.html":{},"injectables/RoomService.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["createservicedto",{"_index":365,"title":{"classes/CreateServiceDto.html":{}},"body":{"classes/CreateServiceDto.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["createservicesuseddto",{"_index":368,"title":{"classes/CreateServicesUsedDto.html":{}},"body":{"classes/CreateServicesUsedDto.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateServicesUsedDto.html":{},"coverage.html":{}}}],["credentials",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{}}}],["current_timestamp(6",{"_index":264,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["data",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["database",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["database.'})@get",{"_index":899,"title":{},"body":{"controllers/UserController.html":{}}}],["database.yml",{"_index":1076,"title":{},"body":{"index.html":{}}}],["date",{"_index":259,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"miscellaneous/functions.html":{}}}],["date((typeof",{"_index":475,"title":{},"body":{"entities/Role.html":{}}}],["date(date",{"_index":476,"title":{},"body":{"entities/Role.html":{}}}],["date).tolocalestring(\"en",{"_index":477,"title":{},"body":{"entities/Role.html":{}}}],["dd",{"_index":290,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["ddocumentation",{"_index":1078,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AuthController.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["default",{"_index":40,"title":{},"body":{"classes/AddNewUserDto.html":{},"injectables/AppLoggerMiddleware.html":{},"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddNewUserDto.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{}}}],["delete",{"_index":317,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(\"delete",{"_index":519,"title":{},"body":{"controllers/RoleController.html":{}}}],["delete(':id",{"_index":309,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["delete('delete",{"_index":929,"title":{},"body":{"controllers/UserController.html":{}}}],["deleterole",{"_index":482,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["deleterole(@param(\"id",{"_index":520,"title":{},"body":{"controllers/RoleController.html":{}}}],["deleterole(roleid",{"_index":490,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["deleteroledto",{"_index":371,"title":{"classes/DeleteRoleDto.html":{}},"body":{"classes/DeleteRoleDto.html":{},"coverage.html":{}}}],["deleteuser",{"_index":886,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@query(\"condition",{"_index":930,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(condition",{"_index":895,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(cookies",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1090,"title":{},"body":{"index.html":{},"properties.html":{}}}],["detail",{"_index":601,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["discount",{"_index":576,"title":{},"body":{"entities/RoomDetail.html":{}}}],["docker",{"_index":1073,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1020,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":320,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["dto/room_type.addnew.dto",{"_index":689,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["dto/room_type.updateroomtype.dto",{"_index":691,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["dto/update",{"_index":322,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["dto/user.addnewuser.dto",{"_index":912,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/user.backend.dto",{"_index":973,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/user.login.dto",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/user.register.dto",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/user.update.dto",{"_index":913,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["email",{"_index":11,"title":{},"body":{"classes/AddNewUserDto.html":{},"injectables/RegisterService.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["emails",{"_index":457,"title":{},"body":{"injectables/RegisterService.html":{}}}],["entities",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/role.entity",{"_index":526,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/room_type.entity",{"_index":718,"title":{},"body":{"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{}}}],["entities/user.entity",{"_index":943,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":252,"title":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["err.message",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["err.messgage",{"_index":711,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["err.response.message",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["err.status",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["error",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["error(\"invalid",{"_index":389,"title":{},"body":{"injectables/LoginService.html":{}}}],["example",{"_index":1071,"title":{},"body":{"index.html":{}}}],["exist",{"_index":447,"title":{},"body":{"injectables/RegisterService.html":{}}}],["existed",{"_index":455,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/RoomTypeService.html":{}}}],["exists",{"_index":540,"title":{},"body":{"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{}}}],["expired",{"_index":998,"title":{},"body":{"injectables/UserService.html":{}}}],["expiresin",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["export",{"_index":51,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{}}}],["exports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":90,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":827,"title":{},"body":{"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{}}}],["f",{"_index":1075,"title":{},"body":{"index.html":{}}}],["false",{"_index":403,"title":{},"body":{"entities/Manage.html":{},"entities/RoomType.html":{},"entities/User.html":{}}}],["false})@min(1)@max(3",{"_index":857,"title":{},"body":{"entities/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{}}}],["findall",{"_index":297,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["findone",{"_index":298,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["findone(@param('id",{"_index":327,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["findone(id",{"_index":305,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["found",{"_index":538,"title":{},"body":{"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"injectables/UserService.html":{}}}],["fullname",{"_index":12,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/User.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["function",{"_index":472,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["functions",{"_index":1062,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":13,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["get(\"get",{"_index":512,"title":{},"body":{"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["get(':id",{"_index":306,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["getallrole",{"_index":483,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["getallroomtype",{"_index":660,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["getalluser",{"_index":887,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["gethello",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrolebyid",{"_index":484,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["getrolebyid(@param(\"id",{"_index":513,"title":{},"body":{"controllers/RoleController.html":{}}}],["getrolebyid(roleid",{"_index":496,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["getroomtypebyname",{"_index":661,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["getroomtypebyname(@param(\"name",{"_index":697,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["getroomtypebyname(roomname",{"_index":670,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["getroomtypefilteredbycapacity",{"_index":662,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["getroomtypefilteredbycapacity(@query(\"mincapacity",{"_index":701,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["getroomtypefilteredbycapacity(mincapacity",{"_index":675,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["getting",{"_index":1065,"title":{"index.html":{}},"body":{}}],["getuserbycondition",{"_index":888,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbycondition(@query(\"condition",{"_index":919,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbycondition(condition",{"_index":901,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["global",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["greater",{"_index":733,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["hashpassword",{"_index":461,"title":{},"body":{"injectables/RegisterService.html":{}}}],["hello",{"_index":162,"title":{},"body":{"injectables/AppService.html":{}}}],["hh:mm:ss",{"_index":291,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["host",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["hotel",{"_index":1067,"title":{},"body":{"index.html":{}}}],["http://127.0.0.1:8080",{"_index":1086,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["httpstatus.created",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["httpstatus.internal_server_error",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{}}}],["httpstatus.ok",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":256,"title":{},"body":{"entities/Bill.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["id\"].includes(condition",{"_index":984,"title":{},"body":{"injectables/UserService.html":{}}}],["id.'})@delete('delete",{"_index":491,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["id.'})@get('get",{"_index":497,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["id.'})@patch",{"_index":500,"title":{},"body":{"controllers/RoleController.html":{}}}],["id.'})@post('add",{"_index":892,"title":{},"body":{"controllers/UserController.html":{}}}],["id/:id",{"_index":492,"title":{},"body":{"controllers/RoleController.html":{}}}],["id/{id",{"_index":1097,"title":{},"body":{"index.html":{}}}],["id=${roleid",{"_index":516,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["identifier",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":91,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{}}}],["imports",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/RoomTypeModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddNewUserDto.html":{},"injectables/AppLoggerMiddleware.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{}}}],["info.'})@patch",{"_index":907,"title":{},"body":{"controllers/UserController.html":{}}}],["inject",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppLoggerMiddleware.html":{},"injectables/AppService.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/RoomTypeService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppLoggerMiddleware.html":{},"injectables/AppService.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/RoomTypeService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"injectables/AppService.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/RoomTypeService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":381,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"injectables/UserService.html":{}}}],["injectrepository(role",{"_index":443,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["injectrepository(roomtype",{"_index":728,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["injectrepository(user",{"_index":384,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["insertcreated",{"_index":286,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["insertupdated",{"_index":293,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["installation",{"_index":1070,"title":{},"body":{"index.html":{}}}],["internal",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{}}}],["internalservererrorexception",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["ip",{"_index":93,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["isdate",{"_index":358,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isemail",{"_index":47,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["isemail()@apiproperty({type",{"_index":26,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["isint",{"_index":846,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{}}}],["isint()@apiproperty({type",{"_index":841,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{}}}],["ismatch",{"_index":390,"title":{},"body":{"injectables/LoginService.html":{}}}],["isnumber",{"_index":48,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["isnumber()@apiproperty({type",{"_index":30,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["isnumber()@min(1)@max(3)@apiproperty({type",{"_index":951,"title":{},"body":{"classes/UserRegister.html":{}}}],["ispassportnumber",{"_index":936,"title":{},"body":{"classes/UserLogin.html":{}}}],["isstring",{"_index":49,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["isstring()@apiproperty({type",{"_index":22,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{}}}],["isstring()@min(8)@apiproperty({type",{"_index":933,"title":{},"body":{"classes/UserLogin.html":{},"classes/UserRegister.html":{}}}],["isstrongpassword",{"_index":937,"title":{},"body":{"classes/UserLogin.html":{}}}],["joincolumn",{"_index":594,"title":{},"body":{"entities/RoomDetail.html":{}}}],["jwt_key",{"_index":994,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtmodule",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.registerasync",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtservice",{"_index":376,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["key",{"_index":1091,"title":{},"body":{"index.html":{}}}],["later",{"_index":983,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":104,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["license",{"_index":1109,"title":{},"body":{"properties.html":{}}}],["logger",{"_index":71,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["logger('http",{"_index":87,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["login",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["login(@res",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(response",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(userinfo",{"_index":379,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.'})@post('login",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["login/login.service",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["loginservice",{"_index":189,"title":{"injectables/LoginService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["manage",{"_index":397,"title":{"entities/Manage.html":{}},"body":{"entities/Manage.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"coverage.html":{}}}],["manage.controller",{"_index":429,"title":{},"body":{"modules/ManageModule.html":{}}}],["manage.dto",{"_index":418,"title":{},"body":{"controllers/ManageController.html":{},"injectables/ManageService.html":{},"classes/UpdateManageDto.html":{}}}],["manage.dto.ts",{"_index":352,"title":{},"body":{"classes/CreateManageDto.html":{},"classes/UpdateManageDto.html":{},"coverage.html":{}}}],["manage.service",{"_index":417,"title":{},"body":{"controllers/ManageController.html":{},"modules/ManageModule.html":{}}}],["managecontroller",{"_index":407,"title":{"controllers/ManageController.html":{}},"body":{"controllers/ManageController.html":{},"modules/ManageModule.html":{},"coverage.html":{}}}],["management",{"_index":1068,"title":{},"body":{"index.html":{}}}],["managemodule",{"_index":425,"title":{"modules/ManageModule.html":{}},"body":{"modules/ManageModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":399,"title":{},"body":{"entities/Manage.html":{}}}],["manageservice",{"_index":416,"title":{"injectables/ManageService.html":{}},"body":{"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"coverage.html":{},"overview.html":{}}}],["manytoone",{"_index":276,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["manytoone(undefined",{"_index":272,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["matching",{"_index":53,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["max",{"_index":690,"title":{},"body":{"controllers/RoomTypeController.html":{},"entities/User.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{}}}],["max(3",{"_index":870,"title":{},"body":{"entities/User.html":{},"classes/UserRegister.html":{}}}],["maxcapacity",{"_index":676,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["maxcapacity=${maxcapacity",{"_index":734,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["maximum",{"_index":33,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"classes/UserUpdate.html":{}}}],["maxnumber",{"_index":705,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["message",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":94,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"index.html":{}}}],["methods",{"_index":72,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware/request.logging",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["min",{"_index":867,"title":{},"body":{"entities/User.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{}}}],["min(1",{"_index":869,"title":{},"body":{"entities/User.html":{},"classes/UserRegister.html":{}}}],["min(8",{"_index":938,"title":{},"body":{"classes/UserLogin.html":{},"classes/UserRegister.html":{}}}],["mincapacity",{"_index":681,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["mincapacity=${mincapacity",{"_index":732,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["minimum",{"_index":31,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"classes/UserUpdate.html":{}}}],["minlength",{"_index":36,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{}}}],["minnumber",{"_index":703,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["miscellaneous",{"_index":1061,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mm",{"_index":289,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["module",{"_index":106,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":283,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"controllers/RoomTypeController.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"dependencies.html":{}}}],["moment().utc().format(\"yyyy",{"_index":288,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["more",{"_index":1092,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":972,"title":{},"body":{"injectables/UserService.html":{}}}],["morethan(0",{"_index":987,"title":{},"body":{"injectables/UserService.html":{}}}],["name",{"_index":81,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name.'})@get('get",{"_index":671,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["name/:name",{"_index":672,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["name=${name",{"_index":739,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["name=${roomname",{"_index":699,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["nestjs/common",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":830,"title":{},"body":{"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":46,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"controllers/RoleController.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":89,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["new",{"_index":86,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"entities/Bill.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"injectables/ServicesUsedService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newname",{"_index":738,"title":{},"body":{"injectables/RoomTypeService.html":{},"classes/UpdateRoomTypeDto.html":{}}}],["next",{"_index":77,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["nextfunction",{"_index":78,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["note",{"_index":1084,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":970,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":1072,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1079,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":402,"title":{},"body":{"entities/Manage.html":{},"entities/RoomType.html":{},"entities/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/Bill.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"entities/Manage.html":{},"injectables/ManageService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["number_users",{"_index":577,"title":{},"body":{"entities/RoomDetail.html":{}}}],["ondelete",{"_index":751,"title":{},"body":{"entities/Service.html":{},"entities/User.html":{}}}],["onetomany",{"_index":595,"title":{},"body":{"entities/RoomDetail.html":{}}}],["onetomany(undefined",{"_index":589,"title":{},"body":{"entities/RoomDetail.html":{}}}],["onetoone",{"_index":277,"title":{},"body":{"entities/Bill.html":{},"entities/RoomDetail.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":579,"title":{},"body":{"entities/RoomDetail.html":{}}}],["optional",{"_index":82,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1102,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1081,"title":{},"body":{"index.html":{}}}],["package",{"_index":1035,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":316,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(maxcapacity",{"_index":706,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["parseint(mincapacity",{"_index":704,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["parseint(process.env.salt",{"_index":460,"title":{},"body":{"injectables/RegisterService.html":{}}}],["parseint(value",{"_index":986,"title":{},"body":{"injectables/UserService.html":{}}}],["parser",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":829,"title":{},"body":{"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{}}}],["partialtype(createbilldto",{"_index":828,"title":{},"body":{"classes/UpdateBillDto.html":{}}}],["partialtype(createmanagedto",{"_index":832,"title":{},"body":{"classes/UpdateManageDto.html":{}}}],["partialtype(createroomdetaildto",{"_index":837,"title":{},"body":{"classes/UpdateRoomDetailDto.html":{}}}],["partialtype(createroomdto",{"_index":839,"title":{},"body":{"classes/UpdateRoomDto.html":{}}}],["partialtype(createservicedto",{"_index":848,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["partialtype(createservicesuseddto",{"_index":850,"title":{},"body":{"classes/UpdateServicesUsedDto.html":{}}}],["passthrough",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":14,"title":{},"body":{"classes/AddNewUserDto.html":{},"modules/AppModule.html":{},"injectables/RegisterService.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"index.html":{}}}],["password.length",{"_index":991,"title":{},"body":{"injectables/UserService.html":{}}}],["patch",{"_index":315,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["patch(\"update",{"_index":708,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["patch(':id",{"_index":313,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["payload",{"_index":395,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["payload[\"id",{"_index":999,"title":{},"body":{"injectables/UserService.html":{}}}],["pg",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":15,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["please",{"_index":981,"title":{},"body":{"injectables/UserService.html":{}}}],["port",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["post(\"add",{"_index":922,"title":{},"body":{"controllers/UserController.html":{}}}],["post(\"login",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":746,"title":{},"body":{"entities/Service.html":{}}}],["priceall",{"_index":257,"title":{},"body":{"entities/Bill.html":{}}}],["pricebase",{"_index":641,"title":{},"body":{"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"classes/UpdateRoomTypeDto.html":{}}}],["pricebase'})@patch('update",{"_index":684,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["primarycolumn",{"_index":467,"title":{},"body":{"entities/Role.html":{}}}],["primarygeneratedcolumn",{"_index":278,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn(\"identity",{"_index":796,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["primarygeneratedcolumn(\"increment",{"_index":285,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('identity",{"_index":791,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["primarygeneratedcolumn('increment",{"_index":266,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["private",{"_index":70,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_key",{"_index":995,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AddNewUserDto.html":{},"injectables/AppLoggerMiddleware.html":{},"entities/Bill.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"properties.html":{}}}],["providers",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["quantity",{"_index":786,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["query",{"_index":686,"title":{},"body":{"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["query(\"maxcapacity",{"_index":702,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["query(\"value",{"_index":920,"title":{},"body":{"controllers/UserController.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["reflect",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RegisterService.html":{}}}],["register(@body",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(userinfo",{"_index":439,"title":{},"body":{"injectables/RegisterService.html":{}}}],["register(userregister",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["register.'})@post('register",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["register/register.service",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["registerservice",{"_index":191,"title":{"injectables/RegisterService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["registration",{"_index":1095,"title":{},"body":{"index.html":{}}}],["relations",{"_index":975,"title":{},"body":{"injectables/UserService.html":{}}}],["remove",{"_index":299,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["remove(@param('id",{"_index":331,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["remove(id",{"_index":308,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["removes",{"_index":347,"title":{},"body":{"injectables/BillService.html":{},"injectables/ManageService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{}}}],["repository",{"_index":375,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":910,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":75,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"controllers/UserController.html":{}}}],["request.cookies",{"_index":927,"title":{},"body":{"controllers/UserController.html":{}}}],["request.get('user",{"_index":98,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["res",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":76,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"controllers/AuthController.html":{}}}],["response.cookie(\"access_token",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.get('content",{"_index":103,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["response.on('close",{"_index":100,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["result",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":83,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"injectables/LoginService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rold",{"_index":451,"title":{},"body":{"injectables/RegisterService.html":{}}}],["roldid",{"_index":988,"title":{},"body":{"injectables/UserService.html":{}}}],["role",{"_index":241,"title":{"entities/Role.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["role.'})@post",{"_index":487,"title":{},"body":{"controllers/RoleController.html":{}}}],["role.controller",{"_index":525,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.dto",{"_index":503,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.dto.ts",{"_index":355,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"classes/UpdateRole.html":{},"coverage.html":{}}}],["role.dto.ts:10",{"_index":834,"title":{},"body":{"classes/UpdateRole.html":{}}}],["role.dto.ts:15",{"_index":357,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:16",{"_index":835,"title":{},"body":{"classes/UpdateRole.html":{}}}],["role.dto.ts:9",{"_index":356,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{}}}],["role.id",{"_index":862,"title":{},"body":{"entities/User.html":{}}}],["role.length",{"_index":449,"title":{},"body":{"injectables/RegisterService.html":{}}}],["role.service",{"_index":502,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role/entities/role.entity",{"_index":868,"title":{},"body":{"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["role/role.controller",{"_index":944,"title":{},"body":{"modules/UserModule.html":{}}}],["role/role.service",{"_index":945,"title":{},"body":{"modules/UserModule.html":{}}}],["role[0",{"_index":463,"title":{},"body":{"injectables/RegisterService.html":{}}}],["rolecontroller",{"_index":478,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["roledata",{"_index":489,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["roledata.id",{"_index":542,"title":{},"body":{"injectables/RoleService.html":{}}}],["roledetail",{"_index":536,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleid",{"_index":444,"title":{},"body":{"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{}}}],["roleid/:roleid",{"_index":893,"title":{},"body":{"controllers/UserController.html":{}}}],["rolemodule",{"_index":118,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["roles",{"_index":506,"title":{},"body":{"controllers/RoleController.html":{},"index.html":{}}}],["roles.'})@get",{"_index":494,"title":{},"body":{"controllers/RoleController.html":{}}}],["roles[0",{"_index":508,"title":{},"body":{"controllers/RoleController.html":{}}}],["roleservice",{"_index":437,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["room",{"_index":546,"title":{"entities/Room.html":{}},"body":{"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"coverage.html":{}}}],["room.controller",{"_index":632,"title":{},"body":{"modules/RoomModule.html":{}}}],["room.dto",{"_index":565,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{},"classes/UpdateRoomDto.html":{}}}],["room.dto.ts",{"_index":364,"title":{},"body":{"classes/CreateRoomDto.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["room.service",{"_index":564,"title":{},"body":{"controllers/RoomController.html":{},"modules/RoomModule.html":{}}}],["room/entities/room.entity",{"_index":596,"title":{},"body":{"entities/RoomDetail.html":{}}}],["room_detail.controller",{"_index":621,"title":{},"body":{"modules/RoomDetailModule.html":{}}}],["room_detail.dto",{"_index":611,"title":{},"body":{"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"classes/UpdateRoomDetailDto.html":{}}}],["room_detail.dto.ts",{"_index":361,"title":{},"body":{"classes/CreateRoomDetailDto.html":{},"classes/UpdateRoomDetailDto.html":{},"coverage.html":{}}}],["room_detail.service",{"_index":610,"title":{},"body":{"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{}}}],["room_detail/entities/room_detail.entity",{"_index":794,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["room_type.controller",{"_index":717,"title":{},"body":{"modules/RoomTypeModule.html":{}}}],["room_type.service",{"_index":688,"title":{},"body":{"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{}}}],["room_type/entities/room_type.entity",{"_index":553,"title":{},"body":{"entities/Room.html":{},"entities/Service.html":{}}}],["roomcontroller",{"_index":554,"title":{"controllers/RoomController.html":{}},"body":{"controllers/RoomController.html":{},"modules/RoomModule.html":{},"coverage.html":{}}}],["roomdetail",{"_index":572,"title":{"entities/RoomDetail.html":{}},"body":{"entities/RoomDetail.html":{},"injectables/RoomDetailService.html":{},"entities/ServicesUsed.html":{},"coverage.html":{}}}],["roomdetailcontroller",{"_index":599,"title":{"controllers/RoomDetailController.html":{}},"body":{"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"coverage.html":{}}}],["roomdetailmodule",{"_index":617,"title":{"modules/RoomDetailModule.html":{}},"body":{"modules/RoomDetailModule.html":{},"modules.html":{},"overview.html":{}}}],["roomdetailservice",{"_index":609,"title":{"injectables/RoomDetailService.html":{}},"body":{"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"coverage.html":{},"overview.html":{}}}],["roommodule",{"_index":628,"title":{"modules/RoomModule.html":{}},"body":{"modules/RoomModule.html":{},"modules.html":{},"overview.html":{}}}],["roomname",{"_index":674,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["roomservice",{"_index":563,"title":{"injectables/RoomService.html":{}},"body":{"controllers/RoomController.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"coverage.html":{},"overview.html":{}}}],["roomtype",{"_index":548,"title":{"entities/RoomType.html":{}},"body":{"entities/Room.html":{},"entities/RoomType.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"coverage.html":{}}}],["roomtype.capacity",{"_index":741,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["roomtype.name",{"_index":740,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["roomtype.pricebase",{"_index":742,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["roomtypeaddnewdto",{"_index":651,"title":{"classes/RoomTypeAddNewDto.html":{}},"body":{"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"coverage.html":{}}}],["roomtypecontroller",{"_index":656,"title":{"controllers/RoomTypeController.html":{}},"body":{"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"coverage.html":{}}}],["roomtypedata",{"_index":667,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["roomtypedata.name",{"_index":736,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["roomtypemodule",{"_index":119,"title":{"modules/RoomTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["roomtypeservice",{"_index":687,"title":{"injectables/RoomTypeService.html":{}},"body":{"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["routes",{"_index":1089,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1083,"title":{},"body":{"index.html":{}}}],["salary",{"_index":16,"title":{},"body":{"classes/AddNewUserDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["saltorrounds",{"_index":459,"title":{},"body":{"injectables/RegisterService.html":{}}}],["secret",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["server",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{}}}],["service",{"_index":744,"title":{"entities/Service.html":{}},"body":{"entities/Service.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"coverage.html":{}}}],["service.dto",{"_index":767,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts",{"_index":367,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["services",{"_index":757,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{}}}],["services.controller",{"_index":778,"title":{},"body":{"modules/ServicesModule.html":{}}}],["services.service",{"_index":766,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{}}}],["services/entities/service.entity",{"_index":795,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["services_used",{"_index":578,"title":{},"body":{"entities/RoomDetail.html":{}}}],["services_used.controller",{"_index":819,"title":{},"body":{"modules/ServicesUsedModule.html":{}}}],["services_used.dto",{"_index":809,"title":{},"body":{"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateServicesUsedDto.html":{}}}],["services_used.dto.ts",{"_index":370,"title":{},"body":{"classes/CreateServicesUsedDto.html":{},"classes/UpdateServicesUsedDto.html":{},"coverage.html":{}}}],["services_used.roomdetail",{"_index":590,"title":{},"body":{"entities/RoomDetail.html":{}}}],["services_used.service",{"_index":808,"title":{},"body":{"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{}}}],["services_used/entities/services_used.entity",{"_index":598,"title":{},"body":{"entities/RoomDetail.html":{}}}],["servicescontroller",{"_index":755,"title":{"controllers/ServicesController.html":{}},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"coverage.html":{}}}],["servicesmodule",{"_index":774,"title":{"modules/ServicesModule.html":{}},"body":{"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["servicesservice",{"_index":765,"title":{"injectables/ServicesService.html":{}},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"coverage.html":{},"overview.html":{}}}],["servicesused",{"_index":588,"title":{"entities/ServicesUsed.html":{}},"body":{"entities/RoomDetail.html":{},"entities/ServicesUsed.html":{},"injectables/ServicesUsedService.html":{},"coverage.html":{}}}],["servicesusedcontroller",{"_index":797,"title":{"controllers/ServicesUsedController.html":{}},"body":{"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"coverage.html":{}}}],["servicesusedmodule",{"_index":815,"title":{"modules/ServicesUsedModule.html":{}},"body":{"modules/ServicesUsedModule.html":{},"modules.html":{},"overview.html":{}}}],["servicesusedservice",{"_index":807,"title":{"injectables/ServicesUsedService.html":{}},"body":{"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"coverage.html":{},"overview.html":{}}}],["serving",{"_index":1085,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["something",{"_index":978,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"modules/BillModule.html":{},"injectables/BillService.html":{},"classes/CreateBillDto.html":{},"classes/CreateManageDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateRoomDetailDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServicesUsedDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"modules/ManageModule.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"modules/RoomDetailModule.html":{},"injectables/RoomDetailService.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"modules/RoomTypeModule.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"modules/ServicesUsedModule.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateRoomTypeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["src",{"_index":1088,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":1063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.entity.ts",{"_index":1064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:36",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/request.logging.ts",{"_index":69,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"coverage.html":{}}}],["src/middleware/request.logging.ts:6",{"_index":88,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["src/middleware/request.logging.ts:8",{"_index":79,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["src/v1/auth/auth.controller.ts",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/v1/auth/auth.controller.ts:19",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/v1/auth/auth.controller.ts:55",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/v1/auth/auth.module.ts",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/v1/auth/dto/user.login.dto.ts",{"_index":932,"title":{},"body":{"classes/UserLogin.html":{},"coverage.html":{}}}],["src/v1/auth/dto/user.login.dto.ts:10",{"_index":935,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/v1/auth/dto/user.login.dto.ts:17",{"_index":934,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/v1/auth/dto/user.register.dto.ts",{"_index":946,"title":{},"body":{"classes/UserRegister.html":{},"coverage.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:17",{"_index":953,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:23",{"_index":949,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:29",{"_index":950,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:35",{"_index":954,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:43",{"_index":952,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:49",{"_index":955,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:55",{"_index":947,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:61",{"_index":948,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/dto/user.register.dto.ts:9",{"_index":956,"title":{},"body":{"classes/UserRegister.html":{}}}],["src/v1/auth/login/login.service.ts",{"_index":373,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/v1/auth/login/login.service.ts:10",{"_index":377,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/v1/auth/login/login.service.ts:16",{"_index":380,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/v1/auth/register/register.service.ts",{"_index":436,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/v1/auth/register/register.service.ts:10",{"_index":438,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/v1/auth/register/register.service.ts:16",{"_index":440,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/v1/database/bill/bill.controller.ts",{"_index":295,"title":{},"body":{"controllers/BillController.html":{},"coverage.html":{}}}],["src/v1/database/bill/bill.controller.ts:11",{"_index":303,"title":{},"body":{"controllers/BillController.html":{}}}],["src/v1/database/bill/bill.controller.ts:16",{"_index":304,"title":{},"body":{"controllers/BillController.html":{}}}],["src/v1/database/bill/bill.controller.ts:21",{"_index":307,"title":{},"body":{"controllers/BillController.html":{}}}],["src/v1/database/bill/bill.controller.ts:26",{"_index":314,"title":{},"body":{"controllers/BillController.html":{}}}],["src/v1/database/bill/bill.controller.ts:31",{"_index":310,"title":{},"body":{"controllers/BillController.html":{}}}],["src/v1/database/bill/bill.module.ts",{"_index":336,"title":{},"body":{"modules/BillModule.html":{}}}],["src/v1/database/bill/bill.service.ts",{"_index":338,"title":{},"body":{"injectables/BillService.html":{},"coverage.html":{}}}],["src/v1/database/bill/bill.service.ts:11",{"_index":340,"title":{},"body":{"injectables/BillService.html":{}}}],["src/v1/database/bill/bill.service.ts:15",{"_index":341,"title":{},"body":{"injectables/BillService.html":{}}}],["src/v1/database/bill/bill.service.ts:19",{"_index":343,"title":{},"body":{"injectables/BillService.html":{}}}],["src/v1/database/bill/bill.service.ts:23",{"_index":342,"title":{},"body":{"injectables/BillService.html":{}}}],["src/v1/database/bill/bill.service.ts:7",{"_index":339,"title":{},"body":{"injectables/BillService.html":{}}}],["src/v1/database/bill/dto/create",{"_index":348,"title":{},"body":{"classes/CreateBillDto.html":{},"coverage.html":{}}}],["src/v1/database/bill/dto/update",{"_index":826,"title":{},"body":{"classes/UpdateBillDto.html":{},"coverage.html":{}}}],["src/v1/database/bill/entities/bill.entity.ts",{"_index":254,"title":{},"body":{"entities/Bill.html":{},"coverage.html":{}}}],["src/v1/database/bill/entities/bill.entity.ts:11",{"_index":269,"title":{},"body":{"entities/Bill.html":{}}}],["src/v1/database/bill/entities/bill.entity.ts:14",{"_index":273,"title":{},"body":{"entities/Bill.html":{}}}],["src/v1/database/bill/entities/bill.entity.ts:17",{"_index":265,"title":{},"body":{"entities/Bill.html":{}}}],["src/v1/database/bill/entities/bill.entity.ts:20",{"_index":271,"title":{},"body":{"entities/Bill.html":{}}}],["src/v1/database/bill/entities/bill.entity.ts:8",{"_index":267,"title":{},"body":{"entities/Bill.html":{}}}],["src/v1/database/manage/dto/create",{"_index":351,"title":{},"body":{"classes/CreateManageDto.html":{},"coverage.html":{}}}],["src/v1/database/manage/dto/update",{"_index":831,"title":{},"body":{"classes/UpdateManageDto.html":{},"coverage.html":{}}}],["src/v1/database/manage/entities/manage.entity.ts",{"_index":398,"title":{},"body":{"entities/Manage.html":{},"coverage.html":{}}}],["src/v1/database/manage/entities/manage.entity.ts:11",{"_index":406,"title":{},"body":{"entities/Manage.html":{}}}],["src/v1/database/manage/entities/manage.entity.ts:14",{"_index":404,"title":{},"body":{"entities/Manage.html":{}}}],["src/v1/database/manage/entities/manage.entity.ts:17",{"_index":400,"title":{},"body":{"entities/Manage.html":{}}}],["src/v1/database/manage/entities/manage.entity.ts:20",{"_index":405,"title":{},"body":{"entities/Manage.html":{}}}],["src/v1/database/manage/entities/manage.entity.ts:8",{"_index":401,"title":{},"body":{"entities/Manage.html":{}}}],["src/v1/database/manage/manage.controller.ts",{"_index":408,"title":{},"body":{"controllers/ManageController.html":{},"coverage.html":{}}}],["src/v1/database/manage/manage.controller.ts:11",{"_index":410,"title":{},"body":{"controllers/ManageController.html":{}}}],["src/v1/database/manage/manage.controller.ts:16",{"_index":411,"title":{},"body":{"controllers/ManageController.html":{}}}],["src/v1/database/manage/manage.controller.ts:21",{"_index":412,"title":{},"body":{"controllers/ManageController.html":{}}}],["src/v1/database/manage/manage.controller.ts:26",{"_index":415,"title":{},"body":{"controllers/ManageController.html":{}}}],["src/v1/database/manage/manage.controller.ts:31",{"_index":413,"title":{},"body":{"controllers/ManageController.html":{}}}],["src/v1/database/manage/manage.module.ts",{"_index":428,"title":{},"body":{"modules/ManageModule.html":{}}}],["src/v1/database/manage/manage.service.ts",{"_index":430,"title":{},"body":{"injectables/ManageService.html":{},"coverage.html":{}}}],["src/v1/database/manage/manage.service.ts:11",{"_index":432,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/v1/database/manage/manage.service.ts:15",{"_index":433,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/v1/database/manage/manage.service.ts:19",{"_index":435,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/v1/database/manage/manage.service.ts:23",{"_index":434,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/v1/database/manage/manage.service.ts:7",{"_index":431,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/v1/database/role/dto/create",{"_index":354,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/v1/database/role/dto/delete",{"_index":372,"title":{},"body":{"classes/DeleteRoleDto.html":{},"coverage.html":{}}}],["src/v1/database/role/dto/update",{"_index":833,"title":{},"body":{"classes/UpdateRole.html":{},"coverage.html":{}}}],["src/v1/database/role/entities/role.entity.ts",{"_index":465,"title":{},"body":{"entities/Role.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/v1/database/role/entities/role.entity.ts:11",{"_index":468,"title":{},"body":{"entities/Role.html":{}}}],["src/v1/database/role/entities/role.entity.ts:14",{"_index":469,"title":{},"body":{"entities/Role.html":{}}}],["src/v1/database/role/entities/role.entity.ts:17",{"_index":466,"title":{},"body":{"entities/Role.html":{}}}],["src/v1/database/role/entities/role.entity.ts:20",{"_index":470,"title":{},"body":{"entities/Role.html":{}}}],["src/v1/database/role/role.controller.ts",{"_index":479,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/v1/database/role/role.controller.ts:105",{"_index":493,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/v1/database/role/role.controller.ts:14",{"_index":495,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/v1/database/role/role.controller.ts:37",{"_index":488,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/v1/database/role/role.controller.ts:60",{"_index":498,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/v1/database/role/role.controller.ts:82",{"_index":501,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/v1/database/role/role.module.ts",{"_index":524,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/v1/database/role/role.service.ts",{"_index":528,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/v1/database/role/role.service.ts:14",{"_index":533,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/v1/database/role/role.service.ts:20",{"_index":534,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/v1/database/role/role.service.ts:30",{"_index":531,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/v1/database/role/role.service.ts:41",{"_index":535,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/v1/database/role/role.service.ts:48",{"_index":532,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/v1/database/role/role.service.ts:8",{"_index":530,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/v1/database/room/dto/create",{"_index":363,"title":{},"body":{"classes/CreateRoomDto.html":{},"coverage.html":{}}}],["src/v1/database/room/dto/update",{"_index":838,"title":{},"body":{"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["src/v1/database/room/entities/room.entity.ts",{"_index":547,"title":{},"body":{"entities/Room.html":{},"coverage.html":{}}}],["src/v1/database/room/entities/room.entity.ts:12",{"_index":551,"title":{},"body":{"entities/Room.html":{}}}],["src/v1/database/room/entities/room.entity.ts:15",{"_index":549,"title":{},"body":{"entities/Room.html":{}}}],["src/v1/database/room/entities/room.entity.ts:18",{"_index":552,"title":{},"body":{"entities/Room.html":{}}}],["src/v1/database/room/entities/room.entity.ts:9",{"_index":550,"title":{},"body":{"entities/Room.html":{}}}],["src/v1/database/room/room.controller.ts",{"_index":555,"title":{},"body":{"controllers/RoomController.html":{},"coverage.html":{}}}],["src/v1/database/room/room.controller.ts:11",{"_index":557,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/v1/database/room/room.controller.ts:16",{"_index":558,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/v1/database/room/room.controller.ts:21",{"_index":559,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/v1/database/room/room.controller.ts:26",{"_index":562,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/v1/database/room/room.controller.ts:31",{"_index":560,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/v1/database/room/room.module.ts",{"_index":631,"title":{},"body":{"modules/RoomModule.html":{}}}],["src/v1/database/room/room.service.ts",{"_index":633,"title":{},"body":{"injectables/RoomService.html":{},"coverage.html":{}}}],["src/v1/database/room/room.service.ts:11",{"_index":635,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/v1/database/room/room.service.ts:15",{"_index":636,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/v1/database/room/room.service.ts:19",{"_index":638,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/v1/database/room/room.service.ts:23",{"_index":637,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/v1/database/room/room.service.ts:7",{"_index":634,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/v1/database/room_detail/dto/create",{"_index":360,"title":{},"body":{"classes/CreateRoomDetailDto.html":{},"coverage.html":{}}}],["src/v1/database/room_detail/dto/update",{"_index":836,"title":{},"body":{"classes/UpdateRoomDetailDto.html":{},"coverage.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts",{"_index":573,"title":{},"body":{"entities/RoomDetail.html":{},"coverage.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:12",{"_index":585,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:15",{"_index":593,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:18",{"_index":587,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:21",{"_index":586,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:24",{"_index":581,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:27",{"_index":582,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:30",{"_index":584,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:34",{"_index":580,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:37",{"_index":591,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:40",{"_index":583,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/entities/room_detail.entity.ts:43",{"_index":592,"title":{},"body":{"entities/RoomDetail.html":{}}}],["src/v1/database/room_detail/room_detail.controller.ts",{"_index":600,"title":{},"body":{"controllers/RoomDetailController.html":{},"coverage.html":{}}}],["src/v1/database/room_detail/room_detail.controller.ts:11",{"_index":603,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["src/v1/database/room_detail/room_detail.controller.ts:16",{"_index":604,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["src/v1/database/room_detail/room_detail.controller.ts:21",{"_index":605,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["src/v1/database/room_detail/room_detail.controller.ts:26",{"_index":608,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["src/v1/database/room_detail/room_detail.controller.ts:31",{"_index":606,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["src/v1/database/room_detail/room_detail.module.ts",{"_index":620,"title":{},"body":{"modules/RoomDetailModule.html":{}}}],["src/v1/database/room_detail/room_detail.service.ts",{"_index":622,"title":{},"body":{"injectables/RoomDetailService.html":{},"coverage.html":{}}}],["src/v1/database/room_detail/room_detail.service.ts:11",{"_index":624,"title":{},"body":{"injectables/RoomDetailService.html":{}}}],["src/v1/database/room_detail/room_detail.service.ts:15",{"_index":625,"title":{},"body":{"injectables/RoomDetailService.html":{}}}],["src/v1/database/room_detail/room_detail.service.ts:19",{"_index":627,"title":{},"body":{"injectables/RoomDetailService.html":{}}}],["src/v1/database/room_detail/room_detail.service.ts:23",{"_index":626,"title":{},"body":{"injectables/RoomDetailService.html":{}}}],["src/v1/database/room_detail/room_detail.service.ts:7",{"_index":623,"title":{},"body":{"injectables/RoomDetailService.html":{}}}],["src/v1/database/room_type/dto/room_type.addnew.dto.ts",{"_index":652,"title":{},"body":{"classes/RoomTypeAddNewDto.html":{},"coverage.html":{}}}],["src/v1/database/room_type/dto/room_type.addnew.dto.ts:15",{"_index":653,"title":{},"body":{"classes/RoomTypeAddNewDto.html":{}}}],["src/v1/database/room_type/dto/room_type.addnew.dto.ts:21",{"_index":655,"title":{},"body":{"classes/RoomTypeAddNewDto.html":{}}}],["src/v1/database/room_type/dto/room_type.addnew.dto.ts:9",{"_index":654,"title":{},"body":{"classes/RoomTypeAddNewDto.html":{}}}],["src/v1/database/room_type/dto/room_type.updateroomtype.dto.ts",{"_index":840,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{},"coverage.html":{}}}],["src/v1/database/room_type/dto/room_type.updateroomtype.dto.ts:15",{"_index":844,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{}}}],["src/v1/database/room_type/dto/room_type.updateroomtype.dto.ts:21",{"_index":842,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{}}}],["src/v1/database/room_type/dto/room_type.updateroomtype.dto.ts:27",{"_index":845,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{}}}],["src/v1/database/room_type/dto/room_type.updateroomtype.dto.ts:9",{"_index":843,"title":{},"body":{"classes/UpdateRoomTypeDto.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts",{"_index":639,"title":{},"body":{"entities/RoomType.html":{},"coverage.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts:10",{"_index":647,"title":{},"body":{"entities/RoomType.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts:13",{"_index":643,"title":{},"body":{"entities/RoomType.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts:16",{"_index":648,"title":{},"body":{"entities/RoomType.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts:19",{"_index":644,"title":{},"body":{"entities/RoomType.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts:22",{"_index":649,"title":{},"body":{"entities/RoomType.html":{}}}],["src/v1/database/room_type/entities/room_type.entity.ts:7",{"_index":645,"title":{},"body":{"entities/RoomType.html":{}}}],["src/v1/database/room_type/room_type.controller.ts",{"_index":657,"title":{},"body":{"controllers/RoomTypeController.html":{},"coverage.html":{}}}],["src/v1/database/room_type/room_type.controller.ts:101",{"_index":666,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["src/v1/database/room_type/room_type.controller.ts:15",{"_index":669,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["src/v1/database/room_type/room_type.controller.ts:36",{"_index":673,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["src/v1/database/room_type/room_type.controller.ts:57",{"_index":680,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["src/v1/database/room_type/room_type.controller.ts:80",{"_index":685,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["src/v1/database/room_type/room_type.module.ts",{"_index":716,"title":{},"body":{"modules/RoomTypeModule.html":{}}}],["src/v1/database/room_type/room_type.service.ts",{"_index":720,"title":{},"body":{"injectables/RoomTypeService.html":{},"coverage.html":{}}}],["src/v1/database/room_type/room_type.service.ts:14",{"_index":724,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["src/v1/database/room_type/room_type.service.ts:20",{"_index":725,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["src/v1/database/room_type/room_type.service.ts:30",{"_index":726,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["src/v1/database/room_type/room_type.service.ts:42",{"_index":723,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["src/v1/database/room_type/room_type.service.ts:53",{"_index":727,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["src/v1/database/room_type/room_type.service.ts:9",{"_index":722,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["src/v1/database/services/dto/create",{"_index":366,"title":{},"body":{"classes/CreateServiceDto.html":{},"coverage.html":{}}}],["src/v1/database/services/dto/update",{"_index":847,"title":{},"body":{"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["src/v1/database/services/entities/service.entity.ts",{"_index":745,"title":{},"body":{"entities/Service.html":{},"coverage.html":{}}}],["src/v1/database/services/entities/service.entity.ts:11",{"_index":749,"title":{},"body":{"entities/Service.html":{}}}],["src/v1/database/services/entities/service.entity.ts:14",{"_index":750,"title":{},"body":{"entities/Service.html":{}}}],["src/v1/database/services/entities/service.entity.ts:17",{"_index":753,"title":{},"body":{"entities/Service.html":{}}}],["src/v1/database/services/entities/service.entity.ts:20",{"_index":747,"title":{},"body":{"entities/Service.html":{}}}],["src/v1/database/services/entities/service.entity.ts:23",{"_index":754,"title":{},"body":{"entities/Service.html":{}}}],["src/v1/database/services/entities/service.entity.ts:8",{"_index":748,"title":{},"body":{"entities/Service.html":{}}}],["src/v1/database/services/services.controller.ts",{"_index":756,"title":{},"body":{"controllers/ServicesController.html":{},"coverage.html":{}}}],["src/v1/database/services/services.controller.ts:11",{"_index":759,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/v1/database/services/services.controller.ts:16",{"_index":760,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/v1/database/services/services.controller.ts:21",{"_index":761,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/v1/database/services/services.controller.ts:26",{"_index":764,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/v1/database/services/services.controller.ts:31",{"_index":762,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/v1/database/services/services.module.ts",{"_index":777,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/v1/database/services/services.service.ts",{"_index":779,"title":{},"body":{"injectables/ServicesService.html":{},"coverage.html":{}}}],["src/v1/database/services/services.service.ts:11",{"_index":781,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/v1/database/services/services.service.ts:15",{"_index":782,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/v1/database/services/services.service.ts:19",{"_index":784,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/v1/database/services/services.service.ts:23",{"_index":783,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/v1/database/services/services.service.ts:7",{"_index":780,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/v1/database/services_used/dto/create",{"_index":369,"title":{},"body":{"classes/CreateServicesUsedDto.html":{},"coverage.html":{}}}],["src/v1/database/services_used/dto/update",{"_index":849,"title":{},"body":{"classes/UpdateServicesUsedDto.html":{},"coverage.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts",{"_index":785,"title":{},"body":{"entities/ServicesUsed.html":{},"coverage.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts:12",{"_index":789,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts:15",{"_index":790,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts:18",{"_index":788,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts:21",{"_index":787,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts:24",{"_index":793,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["src/v1/database/services_used/entities/services_used.entity.ts:9",{"_index":792,"title":{},"body":{"entities/ServicesUsed.html":{}}}],["src/v1/database/services_used/services_used.controller.ts",{"_index":798,"title":{},"body":{"controllers/ServicesUsedController.html":{},"coverage.html":{}}}],["src/v1/database/services_used/services_used.controller.ts:11",{"_index":801,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["src/v1/database/services_used/services_used.controller.ts:16",{"_index":802,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["src/v1/database/services_used/services_used.controller.ts:21",{"_index":803,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["src/v1/database/services_used/services_used.controller.ts:26",{"_index":806,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["src/v1/database/services_used/services_used.controller.ts:31",{"_index":804,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["src/v1/database/services_used/services_used.module.ts",{"_index":818,"title":{},"body":{"modules/ServicesUsedModule.html":{}}}],["src/v1/database/services_used/services_used.service.ts",{"_index":820,"title":{},"body":{"injectables/ServicesUsedService.html":{},"coverage.html":{}}}],["src/v1/database/services_used/services_used.service.ts:11",{"_index":822,"title":{},"body":{"injectables/ServicesUsedService.html":{}}}],["src/v1/database/services_used/services_used.service.ts:15",{"_index":823,"title":{},"body":{"injectables/ServicesUsedService.html":{}}}],["src/v1/database/services_used/services_used.service.ts:19",{"_index":825,"title":{},"body":{"injectables/ServicesUsedService.html":{}}}],["src/v1/database/services_used/services_used.service.ts:23",{"_index":824,"title":{},"body":{"injectables/ServicesUsedService.html":{}}}],["src/v1/database/services_used/services_used.service.ts:7",{"_index":821,"title":{},"body":{"injectables/ServicesUsedService.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts",{"_index":6,"title":{},"body":{"classes/AddNewUserDto.html":{},"coverage.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:15",{"_index":28,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:22",{"_index":38,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:28",{"_index":27,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:34",{"_index":39,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:42",{"_index":35,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:49",{"_index":42,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:55",{"_index":24,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:61",{"_index":25,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.addnewuser.dto.ts:9",{"_index":43,"title":{},"body":{"classes/AddNewUserDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts",{"_index":872,"title":{},"body":{"classes/UserBackendDto.html":{},"coverage.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:16",{"_index":877,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:22",{"_index":875,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:28",{"_index":878,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:36",{"_index":876,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:43",{"_index":880,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:49",{"_index":873,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:55",{"_index":874,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:61",{"_index":879,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.backend.dto.ts:9",{"_index":881,"title":{},"body":{"classes/UserBackendDto.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts",{"_index":1009,"title":{},"body":{"classes/UserUpdate.html":{},"coverage.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:12",{"_index":1018,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:18",{"_index":1013,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:24",{"_index":1012,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:30",{"_index":1016,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:38",{"_index":1014,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:44",{"_index":1017,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:50",{"_index":1010,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:56",{"_index":1011,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/dto/user.update.dto.ts:6",{"_index":1015,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/v1/database/user/entities/user.entity.ts",{"_index":851,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/v1/database/user/entities/user.entity.ts:15",{"_index":866,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:20",{"_index":860,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:25",{"_index":861,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:32",{"_index":858,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:38",{"_index":855,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:43",{"_index":856,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:48",{"_index":864,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:53",{"_index":852,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:58",{"_index":853,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:63",{"_index":863,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:66",{"_index":854,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:69",{"_index":865,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/entities/user.entity.ts:9",{"_index":859,"title":{},"body":{"entities/User.html":{}}}],["src/v1/database/user/user.controller.ts",{"_index":883,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/v1/database/user/user.controller.ts:108",{"_index":898,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/database/user/user.controller.ts:17",{"_index":900,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/database/user/user.controller.ts:38",{"_index":903,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/database/user/user.controller.ts:59",{"_index":894,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/database/user/user.controller.ts:86",{"_index":908,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/database/user/user.module.ts",{"_index":941,"title":{},"body":{"modules/UserModule.html":{}}}],["src/v1/database/user/user.service.ts",{"_index":957,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/v1/database/user/user.service.ts:117",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/database/user/user.service.ts:13",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/database/user/user.service.ts:20",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/database/user/user.service.ts:34",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/database/user/user.service.ts:49",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/database/user/user.service.ts:86",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":1066,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["statuscode",{"_index":101,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AddNewUserDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"entities/Role.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["string(user[0].id",{"_index":394,"title":{},"body":{"injectables/LoginService.html":{}}}],["successfully",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["summary",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{}}}],["support",{"_index":1099,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1100,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["this.appservice.gethello",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["this.billservice.create(createbilldto",{"_index":325,"title":{},"body":{"controllers/BillController.html":{}}}],["this.billservice.findall",{"_index":326,"title":{},"body":{"controllers/BillController.html":{}}}],["this.billservice.findone(+id",{"_index":328,"title":{},"body":{"controllers/BillController.html":{}}}],["this.billservice.remove(+id",{"_index":332,"title":{},"body":{"controllers/BillController.html":{}}}],["this.billservice.update(+id",{"_index":330,"title":{},"body":{"controllers/BillController.html":{}}}],["this.createdat",{"_index":287,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["this.jwtservice.signasync(payload",{"_index":396,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.jwtservice.verifyasync",{"_index":996,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.log",{"_index":105,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["this.loginservice.login(userinfo",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.manageservice.create(createmanagedto",{"_index":420,"title":{},"body":{"controllers/ManageController.html":{}}}],["this.manageservice.findall",{"_index":421,"title":{},"body":{"controllers/ManageController.html":{}}}],["this.manageservice.findone(+id",{"_index":422,"title":{},"body":{"controllers/ManageController.html":{}}}],["this.manageservice.remove(+id",{"_index":424,"title":{},"body":{"controllers/ManageController.html":{}}}],["this.manageservice.update(+id",{"_index":423,"title":{},"body":{"controllers/ManageController.html":{}}}],["this.registerservice.register(userregister",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.create(roledata",{"_index":541,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.createrole(roledata",{"_index":511,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.deleterole(roleid",{"_index":521,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findandcount",{"_index":537,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.findby",{"_index":448,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.roleservice.findone",{"_index":539,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["this.roleservice.getallrole",{"_index":507,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getrolebyid(roleid",{"_index":515,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.remove(roledetail",{"_index":545,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.save(roledata",{"_index":544,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.save(roledetail",{"_index":543,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.updaterole(roledata",{"_index":518,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roomdetailservice.create(createroomdetaildto",{"_index":612,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["this.roomdetailservice.findall",{"_index":613,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["this.roomdetailservice.findone(+id",{"_index":614,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["this.roomdetailservice.remove(+id",{"_index":616,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["this.roomdetailservice.update(+id",{"_index":615,"title":{},"body":{"controllers/RoomDetailController.html":{}}}],["this.roomservice.create(createroomdto",{"_index":567,"title":{},"body":{"controllers/RoomController.html":{}}}],["this.roomservice.findall",{"_index":568,"title":{},"body":{"controllers/RoomController.html":{}}}],["this.roomservice.findone(+id",{"_index":569,"title":{},"body":{"controllers/RoomController.html":{}}}],["this.roomservice.remove(+id",{"_index":571,"title":{},"body":{"controllers/RoomController.html":{}}}],["this.roomservice.update(+id",{"_index":570,"title":{},"body":{"controllers/RoomController.html":{}}}],["this.roomtypeservice.addnewroomtype(roomtypedata",{"_index":713,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["this.roomtypeservice.find",{"_index":730,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["this.roomtypeservice.findone",{"_index":731,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["this.roomtypeservice.getallroomtype",{"_index":695,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["this.roomtypeservice.getroomtypebyname(roomname",{"_index":698,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["this.roomtypeservice.getroomtypefilteredbycapacity(minnumber",{"_index":707,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["this.roomtypeservice.save(roomtype",{"_index":743,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["this.roomtypeservice.save(roomtypedata",{"_index":737,"title":{},"body":{"injectables/RoomTypeService.html":{}}}],["this.roomtypeservice.updateroomtype(roomtypedata",{"_index":710,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["this.servicesservice.create(createservicedto",{"_index":769,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.findall",{"_index":770,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.findone(+id",{"_index":771,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.remove(+id",{"_index":773,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.update(+id",{"_index":772,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesusedservice.create(createservicesuseddto",{"_index":810,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["this.servicesusedservice.findall",{"_index":811,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["this.servicesusedservice.findone(+id",{"_index":812,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["this.servicesusedservice.remove(+id",{"_index":814,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["this.servicesusedservice.update(+id",{"_index":813,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["this.updatedat",{"_index":292,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["this.userservice.addnewuser(userdata",{"_index":925,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(cookies",{"_index":931,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.find",{"_index":985,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findandcount",{"_index":974,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findby",{"_index":386,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.userservice.findone",{"_index":1000,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findone({where",{"_index":453,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.userservice.getalluser",{"_index":917,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbycondition(condition",{"_index":921,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.save(user",{"_index":464,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.userservice.update",{"_index":1003,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.updateuserbyid(userupdateinfo",{"_index":928,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":388,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"injectables/RoleService.html":{},"injectables/RoomTypeService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":262,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["timestamp",{"_index":261,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["timezone",{"_index":284,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"controllers/RoomTypeController.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"dependencies.html":{}}}],["token",{"_index":992,"title":{},"body":{"injectables/UserService.html":{}}}],["token.access_token",{"_index":997,"title":{},"body":{"injectables/UserService.html":{}}}],["true",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/RoomType.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["try",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/RoomTypeController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["tsconfig.json",{"_index":1082,"title":{},"body":{"index.html":{}}}],["two",{"_index":678,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddNewUserDto.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Bill.html":{},"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/RoomDetail.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"entities/RoomType.html":{},"classes/RoomTypeAddNewDto.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"entities/ServicesUsed.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{}}}],["type.'})@post",{"_index":665,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["typeorm",{"_index":279,"title":{},"body":{"entities/Bill.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"injectables/RegisterService.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"injectables/RoomTypeService.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/RoomTypeModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":527,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([roomtype",{"_index":719,"title":{},"body":{"modules/RoomTypeModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":694,"title":{},"body":{"controllers/RoomTypeController.html":{},"classes/UpdateBillDto.html":{},"classes/UpdateManageDto.html":{},"classes/UpdateRoomDetailDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServicesUsedDto.html":{},"dependencies.html":{}}}],["types.'})@get",{"_index":668,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["types/moment",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["tzstring",{"_index":474,"title":{},"body":{"entities/Role.html":{},"miscellaneous/functions.html":{}}}],["unauthorizedexception",{"_index":971,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":41,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/UserBackendDto.html":{}}}],["unique",{"_index":650,"title":{},"body":{"entities/RoomType.html":{},"entities/User.html":{}}}],["unknown",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1110,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1077,"title":{},"body":{"index.html":{}}}],["update",{"_index":300,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoleController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/RoomTypeController.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["update(@param('id",{"_index":329,"title":{},"body":{"controllers/BillController.html":{},"controllers/ManageController.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"controllers/ServicesController.html":{},"controllers/ServicesUsedController.html":{}}}],["update(id",{"_index":311,"title":{},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"controllers/ManageController.html":{},"injectables/ManageService.html":{},"controllers/RoomController.html":{},"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{}}}],["updatebilldto",{"_index":312,"title":{"classes/UpdateBillDto.html":{}},"body":{"controllers/BillController.html":{},"injectables/BillService.html":{},"classes/UpdateBillDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":258,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":281,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":270,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["updatemanagedto",{"_index":414,"title":{"classes/UpdateManageDto.html":{}},"body":{"controllers/ManageController.html":{},"injectables/ManageService.html":{},"classes/UpdateManageDto.html":{},"coverage.html":{}}}],["updaterole",{"_index":485,"title":{"classes/UpdateRole.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRole.html":{},"coverage.html":{}}}],["updaterole(@body",{"_index":517,"title":{},"body":{"controllers/RoleController.html":{}}}],["updaterole(roledata",{"_index":499,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["updateroomdetaildto",{"_index":607,"title":{"classes/UpdateRoomDetailDto.html":{}},"body":{"controllers/RoomDetailController.html":{},"injectables/RoomDetailService.html":{},"classes/UpdateRoomDetailDto.html":{},"coverage.html":{}}}],["updateroomdto",{"_index":561,"title":{"classes/UpdateRoomDto.html":{}},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["updateroomtype",{"_index":663,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["updateroomtype(@body",{"_index":709,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["updateroomtype(roomtypedata",{"_index":682,"title":{},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{}}}],["updateroomtypedto",{"_index":683,"title":{"classes/UpdateRoomTypeDto.html":{}},"body":{"controllers/RoomTypeController.html":{},"injectables/RoomTypeService.html":{},"classes/UpdateRoomTypeDto.html":{},"coverage.html":{}}}],["updates",{"_index":346,"title":{},"body":{"injectables/BillService.html":{},"injectables/ManageService.html":{},"injectables/RoomDetailService.html":{},"injectables/RoomService.html":{},"injectables/ServicesService.html":{},"injectables/ServicesUsedService.html":{}}}],["updateservicedto",{"_index":763,"title":{"classes/UpdateServiceDto.html":{}},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["updateservicesuseddto",{"_index":805,"title":{"classes/UpdateServicesUsedDto.html":{}},"body":{"controllers/ServicesUsedController.html":{},"injectables/ServicesUsedService.html":{},"classes/UpdateServicesUsedDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":889,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@body",{"_index":926,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(userupdateinfo",{"_index":904,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserbyid",{"_index":958,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserbyid(userdata",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":96,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["use",{"_index":73,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["use(request",{"_index":74,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["used",{"_index":799,"title":{},"body":{"controllers/ServicesUsedController.html":{}}}],["usefactory",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["user",{"_index":175,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Bill.html":{},"injectables/LoginService.html":{},"entities/Manage.html":{},"injectables/RegisterService.html":{},"entities/RoomDetail.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.controller",{"_index":942,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":1002,"title":{},"body":{"injectables/UserService.html":{}}}],["user.length",{"_index":387,"title":{},"body":{"injectables/LoginService.html":{}}}],["user.role.id",{"_index":1008,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":911,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/entities/user.entity",{"_index":282,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/RoomDetail.html":{}}}],["user[0].password",{"_index":392,"title":{},"body":{"injectables/LoginService.html":{}}}],["useragent",{"_index":97,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["userbackenddto",{"_index":871,"title":{"classes/UserBackendDto.html":{}},"body":{"classes/UserBackendDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usercontroller",{"_index":882,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":924,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userdata.id",{"_index":1001,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.password",{"_index":990,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.roleid",{"_index":989,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":393,"title":{},"body":{"injectables/LoginService.html":{}}}],["userinfo",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/UserController.html":{}}}],["userinfo.email",{"_index":456,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userinfo.password",{"_index":458,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userinfo.username",{"_index":385,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{}}}],["userlogin",{"_index":173,"title":{"classes/UserLogin.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LoginService.html":{},"classes/UserLogin.html":{},"coverage.html":{}}}],["usermodule",{"_index":120,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":17,"title":{},"body":{"classes/AddNewUserDto.html":{},"modules/AppModule.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["userregister",{"_index":180,"title":{"classes/UserRegister.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RegisterService.html":{},"classes/UserRegister.html":{},"coverage.html":{}}}],["users",{"_index":452,"title":{},"body":{"injectables/RegisterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":378,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":905,"title":{"classes/UserUpdate.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserUpdate.html":{},"coverage.html":{}}}],["userupdateinfo",{"_index":909,"title":{},"body":{"controllers/UserController.html":{}}}],["v1/auth",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["v1/auth/auth.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["v1/auth/dto/user.login.dto",{"_index":383,"title":{},"body":{"injectables/LoginService.html":{}}}],["v1/auth/dto/user.register.dto",{"_index":442,"title":{},"body":{"injectables/RegisterService.html":{}}}],["v1/auth/login",{"_index":1093,"title":{},"body":{"index.html":{}}}],["v1/auth/register",{"_index":1094,"title":{},"body":{"index.html":{}}}],["v1/database/role/entities/role.entity",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"injectables/RegisterService.html":{}}}],["v1/database/role/role.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["v1/database/room_type/room_type.module",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["v1/database/user/entities/user.entity",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{}}}],["v1/database/user/user.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["v1/role",{"_index":480,"title":{},"body":{"controllers/RoleController.html":{},"index.html":{}}}],["v1/role/get",{"_index":1096,"title":{},"body":{"index.html":{}}}],["v1/room",{"_index":658,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["v1/user",{"_index":884,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":50,"title":{},"body":{"classes/AddNewUserDto.html":{},"classes/CreateRoleDto.html":{},"classes/DeleteRoleDto.html":{},"classes/RoomTypeAddNewDto.html":{},"classes/UpdateRole.html":{},"classes/UpdateRoomTypeDto.html":{},"entities/User.html":{},"classes/UserBackendDto.html":{},"classes/UserLogin.html":{},"classes/UserRegister.html":{},"classes/UserUpdate.html":{},"dependencies.html":{}}}],["value",{"_index":85,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["values",{"_index":700,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["values.'})@get('get",{"_index":679,"title":{},"body":{"controllers/RoomTypeController.html":{}}}],["version",{"_index":1107,"title":{},"body":{"properties.html":{}}}],["void",{"_index":84,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{}}}],["went",{"_index":979,"title":{},"body":{"injectables/UserService.html":{}}}],["world",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":980,"title":{},"body":{"injectables/UserService.html":{}}}],["zone",{"_index":263,"title":{},"body":{"entities/Bill.html":{},"entities/Manage.html":{},"entities/Role.html":{},"entities/Room.html":{},"entities/RoomDetail.html":{},"entities/RoomType.html":{},"entities/Service.html":{},"entities/ServicesUsed.html":{},"entities/User.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillModule.html":{},"modules/ManageModule.html":{},"modules/RoleModule.html":{},"modules/RoomDetailModule.html":{},"modules/RoomModule.html":{},"modules/RoomTypeModule.html":{},"modules/ServicesModule.html":{},"modules/ServicesUsedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddNewUserDto.html":{"url":"classes/AddNewUserDto.html","title":"class - AddNewUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/user/dto/user.addNewUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number, minimum: 1, maximum: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String, minLength: 8})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({type: Number, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.addNewUser.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\n\nexport class AddNewUserDto {\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    userName: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    fullName: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String,\n        minLength: 8\n    })\n    password: string;\n\n    @IsEmail()\n    @ApiProperty({\n        type: String\n    })\n    email: string\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    phone: string;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number,\n        minimum: 1,\n        maximum: 3\n    })\n    gender: number;\n\n    @IsEmail()\n    @ApiProperty({\n        type: Number,\n        default: -1,\n    })\n    salary: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    city: string\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    country: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLoggerMiddleware.html":{"url":"injectables/AppLoggerMiddleware.html","title":"injectable - AppLoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request.logging.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middleware/request.logging.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('HTTP')\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request.logging.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, Logger } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class AppLoggerMiddleware implements NestMiddleware {\n  private logger = new Logger('HTTP');\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const { ip, method, baseUrl: url } = request;\n    const userAgent = request.get('user-agent') || '';\n\n    response.on('close', () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n\n      this.logger.log(\n        `${method} - ${url} - ${statusCode} - ${contentLength} (${userAgent} ${ip})`\n      );\n    });\n\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoomTypeModule\n\nRoomTypeModule\n\nAppModule -->\n\nRoomTypeModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            RoomTypeModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { UserModule } from './v1/database/user/user.module';\nimport { RoleModule } from './v1/database/role/role.module';\nimport { AppLoggerMiddleware } from './middleware/request.logging';\nimport { AuthModule } from './v1/auth/auth.module';\nimport { RoomTypeModule } from './v1/database/room_type/room_type.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('DB_HOST'),\n        port: configService.get('DB_PORT'),\n        username: configService.get('DB_USER'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_NAME'),\n        entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: true,\n      }),\n    }),\n    AuthModule,\n    UserModule,\n    RoleModule,\n    RoomTypeModule\n  ],\n  // controllers: [AppController],\n  // providers: [AppService],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer.apply(AppLoggerMiddleware).forRoutes('*');\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(response: Response, userInfo: UserLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'User login.'})@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/auth/auth.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userInfo\n                                            \n                                                            UserLogin\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(userRegister: UserRegister)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'User register.'})@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRegister\n                                            \n                                                            UserRegister\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res } from \"@nestjs/common\";\nimport { ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LoginService } from './login/login.service';\nimport { RegisterService } from './register/register.service';\nimport { UserLogin } from \"./dto/user.login.dto\";\nimport { UserRegister } from \"./dto/user.register.dto\";\n\n@Controller('v1/auth')\n@ApiTags(\"auth\")\nexport class AuthController {\n    constructor(\n        private readonly loginService: LoginService,\n        private readonly registerService: RegisterService\n    ) { }\n\n    @ApiOperation({ summary: \"User login.\" })\n    @Post(\"login\")\n    async login(@Res({ passthrough: true }) response: Response, @Body() userInfo: UserLogin) {\n        try {\n            const access_token = await this.loginService.login(userInfo)\n            if (access_token) {\n                response.cookie(\"access_token\", access_token)\n                return {\n                    status: HttpStatus.OK,\n                    error: 0,\n                    authentication_token: access_token\n                }\n            }\n            return {\n                status: HttpStatus.INTERNAL_SERVER_ERROR,\n                error: 1,\n                message: \"Internal Server Error.\",\n            }\n\n        } catch (err) {\n            console.log(\"auth.controller.ts - login: \", err)\n            if (err.message == \"invalid authentication credentials\") {\n                return {\n                    status: HttpStatus.UNPROCESSABLE_ENTITY,\n                    error: 1,\n                    message: err.message,\n                }\n            }\n            return {\n                status: HttpStatus.INTERNAL_SERVER_ERROR,\n                error: 1,\n                message: \"Internal Server Error.\",\n            }\n        }\n    }\n\n    @ApiOperation({ summary: \"User register.\" })\n    @Post(\"register\")\n    async register(@Body() userRegister: UserRegister) {\n        try {\n            const result = await this.registerService.register(userRegister)\n            if (result) {\n                return {\n                    status: HttpStatus.CREATED,\n                    error: 0,\n                    message: \"Created user successfully.\",\n                    data: result\n                }\n            }\n            return {\n                status: HttpStatus.INTERNAL_SERVER_ERROR,\n                error: 1,\n                message: \"Internal Server Error.\",\n            }\n\n        }\n        catch (err) {\n            console.error(\"auth.controller.ts - register: \", err)\n            return {\n                status: err.status,\n                error: 1,\n                message: err.response.message,\n            }\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginService\n\nLoginService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginService->AuthModule\n\n\n\n\n\nRegisterService\n\nRegisterService\n\nAuthModule -->\n\nRegisterService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            RegisterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { AuthController } from \"./auth.controller\";\nimport { LoginService } from \"./login/login.service\";\nimport { RegisterService } from \"./register/register.service\";\nimport { Role } from \"@/v1/database/role/entities/role.entity\";\nimport { User } from \"@/v1/database/user/entities/user.entity\";\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([User, Role]),\n        ConfigModule.forRoot(),\n        JwtModule.registerAsync({\n            imports: [ConfigModule],\n            inject: [ConfigService],\n            useFactory: (configService: ConfigService) => ({\n                global: true,\n                secret: configService.get(\"JWT_KEY\"),\n                signOptions: { expiresIn: configService.get(\"EXPIRE_IN\") },\n            })\n        })\n    ],\n    controllers: [AuthController],\n    providers: [LoginService, RegisterService, ConfigService]\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Bill.html":{"url":"entities/Bill.html","title":"entity - Bill","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Bill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/bill/entities/bill.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                priceAll\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/bill/entities/bill.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/bill/entities/bill.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priceAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/bill/entities/bill.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/bill/entities/bill.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/bill/entities/bill.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, BeforeUpdate, Column, Entity, ManyToOne, OneToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport { User } from \"../../user/entities/user.entity\";\nimport * as moment from \"moment-timezone\";\n@Entity()\nexport class Bill {\n    @PrimaryGeneratedColumn(\"increment\")\n    id: number\n\n    @Column()\n    priceAll: number\n\n    @ManyToOne(() => User)\n    user: User\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BillController.html":{"url":"controllers/BillController.html","title":"controller - BillController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BillController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/bill/bill.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bill\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBillDto: CreateBillDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBillDto\n                                            \n                                                            CreateBillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateBillDto: UpdateBillDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBillDto\n                                            \n                                                            UpdateBillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { BillService } from './bill.service';\nimport { CreateBillDto } from './dto/create-bill.dto';\nimport { UpdateBillDto } from './dto/update-bill.dto';\n\n@Controller('bill')\nexport class BillController {\n  constructor(private readonly billService: BillService) {}\n\n  @Post()\n  create(@Body() createBillDto: CreateBillDto) {\n    return this.billService.create(createBillDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.billService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.billService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBillDto: UpdateBillDto) {\n    return this.billService.update(+id, updateBillDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.billService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BillModule.html":{"url":"modules/BillModule.html","title":"module - BillModule","body":"\n                   \n\n\n\n\n    Modules\n    BillModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BillModule\n\n\n\ncluster_BillModule_providers\n\n\n\n\nBillService\n\nBillService\n\n\n\nBillModule\n\nBillModule\n\nBillModule -->\n\nBillService->BillModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/bill/bill.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BillService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BillController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BillService } from './bill.service';\nimport { BillController } from './bill.controller';\n\n@Module({\n  controllers: [BillController],\n  providers: [BillService]\n})\nexport class BillModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BillService.html":{"url":"injectables/BillService.html","title":"injectable - BillService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BillService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/bill/bill.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBillDto: CreateBillDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBillDto\n                                            \n                                                            CreateBillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBillDto: UpdateBillDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/bill/bill.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBillDto\n                                            \n                                                            UpdateBillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBillDto } from './dto/create-bill.dto';\nimport { UpdateBillDto } from './dto/update-bill.dto';\n\n@Injectable()\nexport class BillService {\n  create(createBillDto: CreateBillDto) {\n    return 'This action adds a new bill';\n  }\n\n  findAll() {\n    return `This action returns all bill`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} bill`;\n  }\n\n  update(id: number, updateBillDto: UpdateBillDto) {\n    return `This action updates a #${id} bill`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} bill`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBillDto.html":{"url":"classes/CreateBillDto.html","title":"class - CreateBillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/bill/dto/create-bill.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBillDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateManageDto.html":{"url":"classes/CreateManageDto.html","title":"class - CreateManageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateManageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/manage/dto/create-manage.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateManageDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDate, IsNumber, IsString } from \"class-validator\";\n\nexport class CreateRoleDto {\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    id: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoomDetailDto.html":{"url":"classes/CreateRoomDetailDto.html","title":"class - CreateRoomDetailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoomDetailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_detail/dto/create-room_detail.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRoomDetailDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoomDto.html":{"url":"classes/CreateRoomDto.html","title":"class - CreateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room/dto/create-room.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRoomDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto.html":{"url":"classes/CreateServiceDto.html","title":"class - CreateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateServiceDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServicesUsedDto.html":{"url":"classes/CreateServicesUsedDto.html","title":"class - CreateServicesUsedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServicesUsedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services_used/dto/create-services_used.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateServicesUsedDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleDto.html":{"url":"classes/DeleteRoleDto.html","title":"class - DeleteRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/role/dto/delete-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/dto/delete-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber } from \"class-validator\";\n\nexport class DeleteRoleDto {\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/auth/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/v1/auth/login/login.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(userInfo: UserLogin)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/auth/login/login.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userInfo\n                                            \n                                                            UserLogin\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { User } from '@/v1/database/user/entities/user.entity';\nimport { UserLogin } from '@/v1/auth/dto/user.login.dto';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class LoginService {\n    constructor(\n        @InjectRepository(User) private readonly userService: Repository,\n        private jwtService: JwtService\n    ) { }\n\n    async login(userInfo: UserLogin) {\n        const userName = userInfo.userName\n        const user = await this.userService.findBy({\n            userName: userName,\n        })\n        if (user.length === 0) {\n            throw new Error(\"invalid authentication credentials\")\n        }\n        const isMatch = await bcrypt.compare(userInfo.password, user[0].password)\n        if (!isMatch) {\n            throw new Error(\"invalid authentication credentials\")\n        }\n        \n        const userId = String(user[0].id)\n        const payload = { id: userId };\n        return {\n          access_token: await this.jwtService.signAsync(payload),\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Manage.html":{"url":"entities/Manage.html","title":"entity - Manage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Manage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/manage/entities/manage.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                manager\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/manage/entities/manage.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/manage/entities/manage.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/manage/entities/manage.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/manage/entities/manage.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/manage/entities/manage.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, BeforeUpdate, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { User } from \"../../user/entities/user.entity\";\nimport * as moment from 'moment-timezone';\n\n@Entity()\nexport class Manage {\n    @PrimaryGeneratedColumn(\"increment\")\n    id: number;\n\n    @ManyToOne(() => User, { nullable: false })\n    user: User\n\n    @ManyToOne(() => User, { nullable: false })\n    manager: User\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManageController.html":{"url":"controllers/ManageController.html","title":"controller - ManageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/manage/manage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                manage\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createManageDto: CreateManageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createManageDto\n                                            \n                                                            CreateManageDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateManageDto: UpdateManageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateManageDto\n                                            \n                                                            UpdateManageDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ManageService } from './manage.service';\nimport { CreateManageDto } from './dto/create-manage.dto';\nimport { UpdateManageDto } from './dto/update-manage.dto';\n\n@Controller('manage')\nexport class ManageController {\n  constructor(private readonly manageService: ManageService) {}\n\n  @Post()\n  create(@Body() createManageDto: CreateManageDto) {\n    return this.manageService.create(createManageDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.manageService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.manageService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateManageDto: UpdateManageDto) {\n    return this.manageService.update(+id, updateManageDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.manageService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageModule.html":{"url":"modules/ManageModule.html","title":"module - ManageModule","body":"\n                   \n\n\n\n\n    Modules\n    ManageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageModule\n\n\n\ncluster_ManageModule_providers\n\n\n\n\nManageService\n\nManageService\n\n\n\nManageModule\n\nManageModule\n\nManageModule -->\n\nManageService->ManageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/manage/manage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManageController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ManageService } from './manage.service';\nimport { ManageController } from './manage.controller';\n\n@Module({\n  controllers: [ManageController],\n  providers: [ManageService]\n})\nexport class ManageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManageService.html":{"url":"injectables/ManageService.html","title":"injectable - ManageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/manage/manage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createManageDto: CreateManageDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createManageDto\n                                            \n                                                            CreateManageDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateManageDto: UpdateManageDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/manage/manage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateManageDto\n                                            \n                                                            UpdateManageDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateManageDto } from './dto/create-manage.dto';\nimport { UpdateManageDto } from './dto/update-manage.dto';\n\n@Injectable()\nexport class ManageService {\n  create(createManageDto: CreateManageDto) {\n    return 'This action adds a new manage';\n  }\n\n  findAll() {\n    return `This action returns all manage`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} manage`;\n  }\n\n  update(id: number, updateManageDto: UpdateManageDto) {\n    return `This action updates a #${id} manage`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} manage`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/auth/register/register.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: Repository, roleService: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/v1/auth/register/register.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(userInfo: UserRegister)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/auth/register/register.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userInfo\n                                            \n                                                            UserRegister\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt'\nimport { Role } from '@/v1/database/role/entities/role.entity';\nimport { User } from '@/v1/database/user/entities/user.entity';\nimport { UserRegister } from '@/v1/auth/dto/user.register.dto';\n\n@Injectable()\nexport class RegisterService {\n    constructor(\n        @InjectRepository(User) private readonly userService: Repository,\n        @InjectRepository(Role) private readonly roleService: Repository\n    ) { }\n\n    async register(userInfo: UserRegister) {\n        const roleId = 4; //Check if user role id exist in database\n        const role = await this.roleService.findBy({\n            id: roleId,\n        });\n\n        if (role.length == 0) {\n            throw new BadRequestException({message: \"Rold Id not exist in database.\"}) \n        }\n        \n        const userName = userInfo.userName\n        const users = await this.userService.findOne({where: {userName: userName}})\n        if (users) {\n            throw new BadRequestException({\n                message: `userName = ${userName} has already existed in database.`\n            })\n        }\n\n        const email = userInfo.email\n        const emails = await this.userService.findOne({where: {email: email}})\n        if (emails) {\n            throw new BadRequestException({\n                message: `email = ${email} has already existed in database.`\n            })\n        }\n\n        const password = userInfo.password;\n        const saltOrRounds = parseInt(process.env.SALT)\n        const hashPassword = await bcrypt.hash(password, saltOrRounds);\n\n        const user = {\n            ...userInfo,\n            password: hashPassword,\n            role: role[0]\n        }\n        return this.userService.save(user)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/role/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/entities/role.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/entities/role.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/entities/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { AfterUpdate, BeforeInsert, BeforeUpdate, Column, Entity, PrimaryColumn, } from \"typeorm\";\nimport { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport * as moment from \"moment-timezone\";\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", { timeZone: tzString }));\n}\n@Entity()\nexport class Role {\n    @PrimaryColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createRole\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteRole\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllRole\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getRoleById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(roleData: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new role.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/role/role.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleData\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRole(roleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete a role by Id.'})@Delete('delete-role-by-id/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/role/role.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRole()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all roles.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/role/role.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getRoleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleById(roleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get role by Id.'})@Get('get-role-by-id/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/role/role.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRole(roleData: UpdateRole)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a role by Id.'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/role/role.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleData\n                                            \n                                                            UpdateRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, HttpStatus, Patch, Delete, Param } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { RoleService } from './role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRole } from './dto/update-role.dto';\n\n@Controller('v1/role')\n@ApiTags('role')\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) { }\n\n  @ApiOperation({ summary: \"Get all roles.\" })\n  @Get()\n  async getAllRole() {\n    try {\n      const roles = await this.roleService.getAllRole();\n      if (roles) {\n        return {\n          status: HttpStatus.OK,\n          error: 0,\n          message: \"Get all roles successfully.\",\n          roles: roles[0]\n        }\n      }\n    } catch (err) {\n      console.error(\"role.controller.ts - getAllRole: \", err)\n      return {\n        status: HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.message\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Create a new role.\" })\n  @Post()\n  async createRole(@Body() roleData: CreateRoleDto) {\n    try {\n      const role = await this.roleService.createRole(roleData);\n      if (role) {\n        return {\n          status: HttpStatus.CREATED,\n          error: 0,\n          message: \"Create a role successfully\",\n          role: role,\n        }\n      }\n    } catch (err) {\n      console.error(\"role.controller.ts - createRole: \", err)\n      return {\n        status: err.status,\n        error: 1,\n        message: err.response.message\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Get role by Id.\" })\n  @Get(\"get-role-by-id/:id\")\n  async getRoleById(@Param(\"id\") roleId: number) {\n    console.log(roleId)\n    try {\n      const result = await this.roleService.getRoleById(roleId);\n      return {\n        status: HttpStatus.OK,\n        error: 0,\n        message: `Get role with id=${roleId} successfully.`,\n        data: result\n      }\n    } catch (err) {\n      console.error(\"role.controller.ts getRoleById: \", err);\n      return {\n        status: err.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.response.message ?? \"Internal Server Error.\"\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Update a role by Id.\" })\n  @Patch()\n  async updateRole(@Body() roleData: UpdateRole) {\n    try {\n      const role = await this.roleService.updateRole(roleData);\n      if (role) {\n        return {\n          status: HttpStatus.OK,\n          error: 0,\n          message: \"Update a role successfully.\",\n          role: role,\n        }\n      }\n    } catch (err) {\n      console.error(\"role.controller.ts - updateRole: \", err)\n      return {\n        status: err.status,\n        error: 1,\n        message: err.response.message\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Delete a role by Id.\" })\n  @Delete(\"delete-role-by-id/:id\")\n  async deleteRole(@Param(\"id\") roleId: number) {\n    try {\n      const role = await this.roleService.deleteRole(roleId);\n      if (role) {\n        return {\n          status: HttpStatus.OK,\n          error: 0,\n          message: \"Delete a role successfully\",\n          role: role,\n        }\n      }\n    } catch (err) {\n      console.error(\"role.controller.ts - deleteRole: \", err)\n      return {\n        status: err.status,\n        error: 1,\n        message: err.response.message\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './entities/role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  controllers: [RoleController],\n  providers: [RoleService]\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Async\n                                deleteRole\n                            \n                            \n                                    Async\n                                getAllRole\n                            \n                            \n                                    Async\n                                getRoleById\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/v1/database/role/role.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRole(roleData: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/role/role.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleData\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRole(roleId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/role/role.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/role/role.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleById(roleId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/role/role.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRole(roleData: UpdateRole)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/role/role.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleData\n                                            \n                                                            UpdateRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { Role } from './entities/role.entity';\nimport { Repository } from 'typeorm';\nimport { UpdateRole } from './dto/update-role.dto';\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(Role)\n    private roleService: Repository\n  ) { }\n\n  async getAllRole() {\n    const roleDetail = await this.roleService.findAndCount()\n    if (!roleDetail) throw new BadRequestException({ message: \"Data Not Found\" });\n    return roleDetail;\n  }\n\n  async getRoleById(roleId: number) {\n    const role = await this.roleService.findOne({\n      where: { id: roleId }\n    })\n    if (!role) {\n      throw new BadRequestException({ message: `Role with id=${roleId} not exists in database.` })\n    }\n    return role;\n  }\n\n  async createRole(roleData: CreateRoleDto) {\n    const roleDetail = await this.roleService.create(roleData);\n    const roleId = roleData.id;\n    if (roleId  4) {\n      throw new BadRequestException({ message: \"RoleId must be from 1 to 4!\" })\n    }\n    this.roleService.save(roleDetail);\n    if (!roleDetail) throw new BadRequestException({ message: \"Role Not Created\" });\n    return roleDetail;\n  }\n\n  async updateRole(roleData: UpdateRole) {\n    const roleId = roleData.id;\n    const roleDetail = await this.roleService.findOne({ where: { id: roleId } });\n    if (!roleDetail) throw new BadRequestException({ message: \"Role Not Found\" });\n    return await this.roleService.save(roleData);\n  }\n\n  async deleteRole(roleId: number) {\n    const roleDetail = await this.roleService.findOne({ where: { id: roleId } });\n    if (!roleDetail) throw new BadRequestException({ message: \"Role Not Found\" });\n    return await this.roleService.remove(roleDetail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Room.html":{"url":"entities/Room.html","title":"entity - Room","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Room\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room/entities/room.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                roomType\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room/entities/room.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room/entities/room.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roomType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room/entities/room.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room/entities/room.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, BeforeUpdate, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { RoomType } from \"../../room_type/entities/room_type.entity\";\nimport { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport * as moment from 'moment-timezone';\n\n@Entity()\nexport class Room {\n    @PrimaryGeneratedColumn(\"increment\")\n    id: number;\n\n    @ManyToOne(() => RoomType)\n    roomType: RoomType\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomController.html":{"url":"controllers/RoomController.html","title":"controller - RoomController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room/room.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                room\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoomDto: CreateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room/room.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoomDto\n                                            \n                                                            CreateRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room/room.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room/room.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room/room.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoomDto: UpdateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room/room.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoomDto\n                                            \n                                                            UpdateRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { RoomService } from './room.service';\nimport { CreateRoomDto } from './dto/create-room.dto';\nimport { UpdateRoomDto } from './dto/update-room.dto';\n\n@Controller('room')\nexport class RoomController {\n  constructor(private readonly roomService: RoomService) {}\n\n  @Post()\n  create(@Body() createRoomDto: CreateRoomDto) {\n    return this.roomService.create(createRoomDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.roomService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.roomService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateRoomDto: UpdateRoomDto) {\n    return this.roomService.update(+id, updateRoomDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.roomService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RoomDetail.html":{"url":"entities/RoomDetail.html","title":"entity - RoomDetail","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RoomDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_detail/entities/room_detail.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bill\n                            \n                            \n                                    \n                                check_in\n                            \n                            \n                                    \n                                check_out\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                number_users\n                            \n                            \n                                    \n                                room\n                            \n                            \n                                    \n                                services_used\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bill\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        check_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        check_out\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number_users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        services_used\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServicesUsed[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, services_used => services_used.roomDetail)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_detail/entities/room_detail.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, OneToMany, OneToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport * as moment from 'moment-timezone';\nimport { User } from \"../../user/entities/user.entity\";\nimport { Room } from \"../../room/entities/room.entity\";\nimport { Bill } from \"../../bill/entities/bill.entity\";\nimport { ServicesUsed } from \"../../services_used/entities/services_used.entity\";\n\n@Entity()\nexport class RoomDetail {\n    @PrimaryGeneratedColumn(\"increment\")\n    id: number\n\n    @ManyToOne(() => User)\n    user: User\n\n    @ManyToOne(() => Room)\n    room: Room\n\n    @Column()\n    number_users: number\n\n    @Column()\n    check_in: Date\n\n    @Column()\n    check_out: Date\n\n    @Column()\n    discount: number\n\n    @OneToOne(() => Bill)\n    @JoinColumn()\n    bill: Bill\n\n    @OneToMany(() => ServicesUsed, (services_used) => services_used.roomDetail)\n    services_used: ServicesUsed[]\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomDetailController.html":{"url":"controllers/RoomDetailController.html","title":"controller - RoomDetailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomDetailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_detail/room_detail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                room-detail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoomDetailDto: CreateRoomDetailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoomDetailDto\n                                            \n                                                            CreateRoomDetailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoomDetailDto: UpdateRoomDetailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoomDetailDto\n                                            \n                                                            UpdateRoomDetailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { RoomDetailService } from './room_detail.service';\nimport { CreateRoomDetailDto } from './dto/create-room_detail.dto';\nimport { UpdateRoomDetailDto } from './dto/update-room_detail.dto';\n\n@Controller('room-detail')\nexport class RoomDetailController {\n  constructor(private readonly roomDetailService: RoomDetailService) {}\n\n  @Post()\n  create(@Body() createRoomDetailDto: CreateRoomDetailDto) {\n    return this.roomDetailService.create(createRoomDetailDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.roomDetailService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.roomDetailService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateRoomDetailDto: UpdateRoomDetailDto) {\n    return this.roomDetailService.update(+id, updateRoomDetailDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.roomDetailService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomDetailModule.html":{"url":"modules/RoomDetailModule.html","title":"module - RoomDetailModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomDetailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoomDetailModule\n\n\n\ncluster_RoomDetailModule_providers\n\n\n\n\nRoomDetailService\n\nRoomDetailService\n\n\n\nRoomDetailModule\n\nRoomDetailModule\n\nRoomDetailModule -->\n\nRoomDetailService->RoomDetailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/room_detail/room_detail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoomDetailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomDetailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoomDetailService } from './room_detail.service';\nimport { RoomDetailController } from './room_detail.controller';\n\n@Module({\n  controllers: [RoomDetailController],\n  providers: [RoomDetailService]\n})\nexport class RoomDetailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomDetailService.html":{"url":"injectables/RoomDetailService.html","title":"injectable - RoomDetailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomDetailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_detail/room_detail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createRoomDetailDto: CreateRoomDetailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoomDetailDto\n                                            \n                                                            CreateRoomDetailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateRoomDetailDto: UpdateRoomDetailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_detail/room_detail.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoomDetailDto\n                                            \n                                                            UpdateRoomDetailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateRoomDetailDto } from './dto/create-room_detail.dto';\nimport { UpdateRoomDetailDto } from './dto/update-room_detail.dto';\n\n@Injectable()\nexport class RoomDetailService {\n  create(createRoomDetailDto: CreateRoomDetailDto) {\n    return 'This action adds a new roomDetail';\n  }\n\n  findAll() {\n    return `This action returns all roomDetail`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} roomDetail`;\n  }\n\n  update(id: number, updateRoomDetailDto: UpdateRoomDetailDto) {\n    return `This action updates a #${id} roomDetail`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} roomDetail`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomModule.html":{"url":"modules/RoomModule.html","title":"module - RoomModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoomModule\n\n\n\ncluster_RoomModule_providers\n\n\n\n\nRoomService\n\nRoomService\n\n\n\nRoomModule\n\nRoomModule\n\nRoomModule -->\n\nRoomService->RoomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/room/room.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoomService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoomService } from './room.service';\nimport { RoomController } from './room.controller';\n\n@Module({\n  controllers: [RoomController],\n  providers: [RoomService]\n})\nexport class RoomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomService.html":{"url":"injectables/RoomService.html","title":"injectable - RoomService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room/room.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createRoomDto: CreateRoomDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room/room.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoomDto\n                                            \n                                                            CreateRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room/room.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room/room.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room/room.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateRoomDto: UpdateRoomDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room/room.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoomDto\n                                            \n                                                            UpdateRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateRoomDto } from './dto/create-room.dto';\nimport { UpdateRoomDto } from './dto/update-room.dto';\n\n@Injectable()\nexport class RoomService {\n  create(createRoomDto: CreateRoomDto) {\n    return 'This action adds a new room';\n  }\n\n  findAll() {\n    return `This action returns all room`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} room`;\n  }\n\n  update(id: number, updateRoomDto: UpdateRoomDto) {\n    return `This action updates a #${id} room`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} room`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RoomType.html":{"url":"entities/RoomType.html","title":"entity - RoomType","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RoomType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_type/entities/room_type.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                capacity\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                priceBase\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/entities/room_type.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/entities/room_type.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/entities/room_type.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/entities/room_type.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priceBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/entities/room_type.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/entities/room_type.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, BeforeInsert, BeforeUpdate } from \"typeorm\";\nimport * as moment from \"moment-timezone\"\n\n@Entity()\nexport class RoomType {\n    @PrimaryGeneratedColumn(\"increment\")\n    id: number;\n\n    @Column({ unique: true, nullable: false })\n    name: string;\n\n    @Column({ nullable: false })\n    capacity: number;\n\n    @Column({ nullable: false })\n    priceBase: number;\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomTypeAddNewDto.html":{"url":"classes/RoomTypeAddNewDto.html","title":"class - RoomTypeAddNewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomTypeAddNewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_type/dto/room_type.addNew.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                capacity\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priceBase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.addNew.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.addNew.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priceBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.addNew.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsString } from \"class-validator\";\n\nexport class RoomTypeAddNewDto {\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    name: string;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    capacity: number;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    priceBase: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomTypeController.html":{"url":"controllers/RoomTypeController.html","title":"controller - RoomTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_type/room_type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/room-type\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addNewRoomType\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllRoomType\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getRoomTypeByName\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getRoomTypeFilteredByCapacity\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateRoomType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addNewRoomType\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNewRoomType(roomTypeData: RoomTypeAddNewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create new room type.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.controller.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomTypeData\n                                            \n                                                            RoomTypeAddNewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllRoomType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRoomType()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all room types.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getRoomTypeByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoomTypeByName(roomName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get room type by name.'})@Get('get-room-type-by-name/:name')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getRoomTypeFilteredByCapacity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoomTypeFilteredByCapacity(minCapacity: string, maxCapacity: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get room type between two capacity values.'})@Get('get-room-type-by-capacity')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                minCapacity\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxCapacity\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateRoomType\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRoomType(roomTypeData: UpdateRoomTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update room type: name, capacity, priceBase'})@Patch('update-room-type')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomTypeData\n                                            \n                                                            UpdateRoomTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, HttpStatus, Body, Query, Param, Patch } from '@nestjs/common';\nimport { RoomTypeService } from './room_type.service';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { RoomTypeAddNewDto } from './dto/room_type.addNew.dto';\nimport { max } from 'moment-timezone';\nimport { UpdateRoomTypeDto } from './dto/room_type.updateRoomType.dto';\n\n@Controller('v1/room-type')\n@ApiTags(\"room_type\")\nexport class RoomTypeController {\n  constructor(private readonly roomTypeService: RoomTypeService) { }\n\n  @ApiOperation({ summary: \"Get all room types.\" })\n  @Get()\n  async getAllRoomType() {\n    try {\n      const result = await this.roomTypeService.getAllRoomType()\n      return {\n        status: HttpStatus.OK,\n        error: 0,\n        message: \"Get all room type successfully.\",\n        data: result\n      }\n    } catch (err) {\n      console.error(\"room_type.controller.ts getAllRoomType: \", err)\n      return {\n        status: err.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.response.message ?? err.message\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Get room type by name.\" })\n  @Get(\"get-room-type-by-name/:name\")\n  async getRoomTypeByName(@Param(\"name\") roomName: string) {\n    try {\n      const result = await this.roomTypeService.getRoomTypeByName(roomName);\n      return {\n        status: HttpStatus.OK,\n        error: 0,\n        message: `Get room type with name=${roomName} successfully.`,\n        data: result\n      }\n    } catch (err) {\n      console.error(\"room_type.controller.ts getRoomTypeByName: \", err);\n      return {\n        status: err.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.response.message ?? \"Internal Server Error.\"\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Get room type between two capacity values.\" })\n  @Get(\"get-room-type-by-capacity\")\n  async getRoomTypeFilteredByCapacity(@Query(\"minCapacity\") minCapacity: string, @Query(\"maxCapacity\") maxCapacity: string) {\n    try {\n      const minNumber = parseInt(minCapacity)\n      const maxNumber = parseInt(maxCapacity)\n      const result = await this.roomTypeService.getRoomTypeFilteredByCapacity(minNumber, maxNumber);\n      return {\n        status: HttpStatus.OK,\n        error: 0,\n        message: `Get all room type with capacity from ${minCapacity} to ${maxCapacity} successfully.`,\n        data: result\n      }\n    } catch (err) {\n      console.error(\"room_type.controller.ts getRoomTypeFilteredByCapacity: \", err);\n      return {\n        status: err.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.response.message ?? err.message\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Update room type: name, capacity, priceBase\" })\n  @Patch(\"update-room-type\")\n  async updateRoomType(@Body() roomTypeData: UpdateRoomTypeDto) {\n    try {\n      const result = await this.roomTypeService.updateRoomType(roomTypeData);\n      return {\n        status: HttpStatus.OK,\n        error: 0,\n        message: `Update room type data successfully.`,\n        data: result\n      }\n    } catch (err) {\n      console.error(\"room_type.controller.ts updateRoomType: \", err);\n      return {\n        status: err.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.response.message ?? err.messgage\n      }\n    }\n  }\n\n  @ApiOperation({ summary: \"Create new room type.\" })\n  @Post()\n  async addNewRoomType(@Body() roomTypeData: RoomTypeAddNewDto) {\n    try {\n      const result = await this.roomTypeService.addNewRoomType(roomTypeData)\n      return {\n        status: HttpStatus.CREATED,\n        error: 0,\n        message: \"Create new room type successfully.\",\n        data: result\n      }\n    } catch (err) {\n      console.error(\"room_type.controller.ts addNewRoomType: \", err)\n      return {\n        status: err.status ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 1,\n        message: err.response.message ?? err.message\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomTypeModule.html":{"url":"modules/RoomTypeModule.html","title":"module - RoomTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoomTypeModule\n\n\n\ncluster_RoomTypeModule_providers\n\n\n\n\nRoomTypeService\n\nRoomTypeService\n\n\n\nRoomTypeModule\n\nRoomTypeModule\n\nRoomTypeModule -->\n\nRoomTypeService->RoomTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/room_type/room_type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoomTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomTypeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoomTypeService } from './room_type.service';\nimport { RoomTypeController } from './room_type.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RoomType } from './entities/room_type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RoomType])],\n  controllers: [RoomTypeController],\n  providers: [RoomTypeService]\n})\nexport class RoomTypeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomTypeService.html":{"url":"injectables/RoomTypeService.html","title":"injectable - RoomTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_type/room_type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewRoomType\n                            \n                            \n                                    Async\n                                getAllRoomType\n                            \n                            \n                                    Async\n                                getRoomTypeByName\n                            \n                            \n                                    Async\n                                getRoomTypeFilteredByCapacity\n                            \n                            \n                                    Async\n                                updateRoomType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomTypeService: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/v1/database/room_type/room_type.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomTypeService\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addNewRoomType\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNewRoomType(roomTypeData: RoomTypeAddNewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomTypeData\n                                            \n                                                            RoomTypeAddNewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllRoomType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllRoomType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoomTypeByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoomTypeByName(roomName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoomTypeFilteredByCapacity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoomTypeFilteredByCapacity(minCapacity: number, maxCapacity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                minCapacity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxCapacity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRoomType\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRoomType(roomTypeData: UpdateRoomTypeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/room_type/room_type.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomTypeData\n                                            \n                                                            UpdateRoomTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RoomType } from './entities/room_type.entity';\nimport { Between, Repository } from 'typeorm';\nimport { RoomTypeAddNewDto } from './dto/room_type.addNew.dto';\nimport { UpdateRoomTypeDto } from './dto/room_type.updateRoomType.dto';\n\n@Injectable()\nexport class RoomTypeService {\n  constructor(\n    @InjectRepository(RoomType) private roomTypeService: Repository\n  ) { }\n\n  async getAllRoomType() {\n    const allRoomType = await this.roomTypeService.find()\n    if (!allRoomType) throw new BadRequestException({ message: \"Room type not found!\" })\n    return allRoomType\n  }\n\n  async getRoomTypeByName(roomName: string) {\n    const roomType = await this.roomTypeService.findOne({\n      where: { name: roomName }\n    })\n    if (!roomType) {\n      throw new BadRequestException({ message: `Room type with name=${roomName} not exists in database.` })\n    }\n    return roomType;\n  }\n\n  async getRoomTypeFilteredByCapacity(minCapacity: number, maxCapacity: number) {\n    if (minCapacity > maxCapacity) {\n      throw new BadRequestException({ message: `minCapacity=${minCapacity} is greater than maxCapacity=${maxCapacity}.` });\n    }\n    const result = await this.roomTypeService.find({\n      where: {\n        capacity: Between(minCapacity, maxCapacity)\n      }\n    })\n    return result;\n  }\n\n  async addNewRoomType(roomTypeData: RoomTypeAddNewDto) {\n    const roomName = roomTypeData.name;\n    const roomType = await this.roomTypeService.findOne({\n      where: { name: roomName }\n    })\n    if (roomType) {\n      throw new BadRequestException({ message: `Room type with name = ${roomName} has already existed in database.` })\n    }\n    return await this.roomTypeService.save(roomTypeData)\n  }\n\n  async updateRoomType(roomTypeData: UpdateRoomTypeDto) {\n    const { name, priceBase, capacity, newName } = roomTypeData;\n    const roomType = await this.roomTypeService.findOne({\n      where: { name: name }\n    })\n    if (!roomType) {\n      throw new BadRequestException({ message: `Room type with name=${name} not exists in database.` })\n    }\n    roomType.name = newName;\n    roomType.capacity = capacity;\n    roomType.priceBase = priceBase;\n    return await this.roomTypeService.save(roomType)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Service.html":{"url":"entities/Service.html","title":"entity - Service","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services/entities/service.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                roomType\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services/entities/service.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services/entities/service.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services/entities/service.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services/entities/service.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roomType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services/entities/service.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services/entities/service.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, BeforeInsert, BeforeUpdate } from \"typeorm\";\nimport * as moment from \"moment-timezone\"\nimport { RoomType } from \"../../room_type/entities/room_type.entity\";\n\n@Entity()\nexport class Service {\n    @PrimaryGeneratedColumn(\"increment\")\n    id: number;\n\n    @Column()\n    name: string;\n\n    @Column()\n    price: number;\n\n    @ManyToOne(() => RoomType, { onDelete: \"CASCADE\" })\n    roomType: RoomType\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServicesController.html":{"url":"controllers/ServicesController.html","title":"controller - ServicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services/services.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServiceDto: CreateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services/services.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services/services.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services/services.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services/services.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateServiceDto: UpdateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services/services.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServiceDto\n                                            \n                                                            UpdateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ServicesService } from './services.service';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\n\n@Controller('services')\nexport class ServicesController {\n  constructor(private readonly servicesService: ServicesService) {}\n\n  @Post()\n  create(@Body() createServiceDto: CreateServiceDto) {\n    return this.servicesService.create(createServiceDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.servicesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.servicesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateServiceDto: UpdateServiceDto) {\n    return this.servicesService.update(+id, updateServiceDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.servicesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nServicesService\n\nServicesService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nServicesService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/services/services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServicesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServicesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServicesService } from './services.service';\nimport { ServicesController } from './services.controller';\n\n@Module({\n  controllers: [ServicesController],\n  providers: [ServicesService]\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServicesService.html":{"url":"injectables/ServicesService.html","title":"injectable - ServicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services/services.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createServiceDto: CreateServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services/services.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services/services.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services/services.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services/services.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateServiceDto: UpdateServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services/services.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServiceDto\n                                            \n                                                            UpdateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\n\n@Injectable()\nexport class ServicesService {\n  create(createServiceDto: CreateServiceDto) {\n    return 'This action adds a new service';\n  }\n\n  findAll() {\n    return `This action returns all services`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} service`;\n  }\n\n  update(id: number, updateServiceDto: UpdateServiceDto) {\n    return `This action updates a #${id} service`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} service`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ServicesUsed.html":{"url":"entities/ServicesUsed.html","title":"entity - ServicesUsed","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ServicesUsed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services_used/entities/services_used.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                roomDetail\n                            \n                            \n                                    \n                                service\n                            \n                            \n                                    \n                                servicesUsed\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services_used/entities/services_used.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services_used/entities/services_used.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roomDetail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomDetail\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services_used/entities/services_used.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Service\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services_used/entities/services_used.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        servicesUsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('identity')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services_used/entities/services_used.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/services_used/entities/services_used.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, BeforeUpdate, Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport * as moment from \"moment-timezone\"\nimport { RoomDetail } from \"../../room_detail/entities/room_detail.entity\";\nimport { Service } from \"../../services/entities/service.entity\";\n\n@Entity()\nexport class ServicesUsed {\n    @PrimaryGeneratedColumn(\"identity\")\n    servicesUsed: number\n\n    @ManyToOne(() => RoomDetail)\n    roomDetail: RoomDetail\n\n    @ManyToOne(() => Service)\n    service: Service\n\n    @Column()\n    quantity: number\n\n    @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    createdAt: Date;\n\n    @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n    updatedAt: Date;\n\n    @BeforeInsert()\n    insertCreated() {\n        this.createdAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n        );\n    }\n\n    @BeforeUpdate()\n    insertUpdated() {\n        this.updatedAt = new Date(\n            moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServicesUsedController.html":{"url":"controllers/ServicesUsedController.html","title":"controller - ServicesUsedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServicesUsedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services_used/services_used.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services-used\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServicesUsedDto: CreateServicesUsedDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServicesUsedDto\n                                            \n                                                            CreateServicesUsedDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateServicesUsedDto: UpdateServicesUsedDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServicesUsedDto\n                                            \n                                                            UpdateServicesUsedDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ServicesUsedService } from './services_used.service';\nimport { CreateServicesUsedDto } from './dto/create-services_used.dto';\nimport { UpdateServicesUsedDto } from './dto/update-services_used.dto';\n\n@Controller('services-used')\nexport class ServicesUsedController {\n  constructor(private readonly servicesUsedService: ServicesUsedService) {}\n\n  @Post()\n  create(@Body() createServicesUsedDto: CreateServicesUsedDto) {\n    return this.servicesUsedService.create(createServicesUsedDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.servicesUsedService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.servicesUsedService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateServicesUsedDto: UpdateServicesUsedDto) {\n    return this.servicesUsedService.update(+id, updateServicesUsedDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.servicesUsedService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesUsedModule.html":{"url":"modules/ServicesUsedModule.html","title":"module - ServicesUsedModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesUsedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesUsedModule\n\n\n\ncluster_ServicesUsedModule_providers\n\n\n\n\nServicesUsedService\n\nServicesUsedService\n\n\n\nServicesUsedModule\n\nServicesUsedModule\n\nServicesUsedModule -->\n\nServicesUsedService->ServicesUsedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/services_used/services_used.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServicesUsedService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServicesUsedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServicesUsedService } from './services_used.service';\nimport { ServicesUsedController } from './services_used.controller';\n\n@Module({\n  controllers: [ServicesUsedController],\n  providers: [ServicesUsedService]\n})\nexport class ServicesUsedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServicesUsedService.html":{"url":"injectables/ServicesUsedService.html","title":"injectable - ServicesUsedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServicesUsedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services_used/services_used.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createServicesUsedDto: CreateServicesUsedDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServicesUsedDto\n                                            \n                                                            CreateServicesUsedDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateServicesUsedDto: UpdateServicesUsedDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/services_used/services_used.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServicesUsedDto\n                                            \n                                                            UpdateServicesUsedDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateServicesUsedDto } from './dto/create-services_used.dto';\nimport { UpdateServicesUsedDto } from './dto/update-services_used.dto';\n\n@Injectable()\nexport class ServicesUsedService {\n  create(createServicesUsedDto: CreateServicesUsedDto) {\n    return 'This action adds a new servicesUsed';\n  }\n\n  findAll() {\n    return `This action returns all servicesUsed`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} servicesUsed`;\n  }\n\n  update(id: number, updateServicesUsedDto: UpdateServicesUsedDto) {\n    return `This action updates a #${id} servicesUsed`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} servicesUsed`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBillDto.html":{"url":"classes/UpdateBillDto.html","title":"class - UpdateBillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/bill/dto/update-bill.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateBillDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBillDto } from './create-bill.dto';\n\nexport class UpdateBillDto extends PartialType(CreateBillDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateManageDto.html":{"url":"classes/UpdateManageDto.html","title":"class - UpdateManageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateManageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/manage/dto/update-manage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateManageDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateManageDto } from './create-manage.dto';\n\nexport class UpdateManageDto extends PartialType(CreateManageDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRole.html":{"url":"classes/UpdateRole.html","title":"class - UpdateRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/role/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/dto/update-role.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/role/dto/update-role.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n\nexport class UpdateRole {\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    id: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoomDetailDto.html":{"url":"classes/UpdateRoomDetailDto.html","title":"class - UpdateRoomDetailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoomDetailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_detail/dto/update-room_detail.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoomDetailDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoomDetailDto } from './create-room_detail.dto';\n\nexport class UpdateRoomDetailDto extends PartialType(CreateRoomDetailDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoomDto.html":{"url":"classes/UpdateRoomDto.html","title":"class - UpdateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room/dto/update-room.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateRoomDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoomDto } from './create-room.dto';\n\nexport class UpdateRoomDto extends PartialType(CreateRoomDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoomTypeDto.html":{"url":"classes/UpdateRoomTypeDto.html","title":"class - UpdateRoomTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoomTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/room_type/dto/room_type.updateRoomType.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                capacity\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                newName\n                            \n                            \n                                    \n                                    \n                                priceBase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.updateRoomType.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.updateRoomType.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.updateRoomType.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priceBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/room_type/dto/room_type.updateRoomType.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsNumber, IsString } from \"class-validator\";\n\nexport class UpdateRoomTypeDto {\n    @IsString()\n    @ApiProperty({\n        type: String,\n    })\n    name: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String,\n    })\n    newName: string;\n\n    @IsInt()\n    @ApiProperty({\n        type: Number,\n    })\n    capacity: number\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    priceBase: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto.html":{"url":"classes/UpdateServiceDto.html","title":"class - UpdateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services/dto/update-service.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateServiceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateServiceDto } from './create-service.dto';\n\nexport class UpdateServiceDto extends PartialType(CreateServiceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServicesUsedDto.html":{"url":"classes/UpdateServicesUsedDto.html","title":"class - UpdateServicesUsedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServicesUsedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/services_used/dto/update-services_used.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateServicesUsedDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateServicesUsedDto } from './create-services_used.dto';\n\nexport class UpdateServicesUsedDto extends PartialType(CreateServicesUsedDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})@Min(1)@Max(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, role => role.id, {nullable: false, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp with time zone', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, BeforeInsert, BeforeUpdate } from 'typeorm';\nimport * as moment from \"moment-timezone\"\nimport { Max, Min } from 'class-validator';\nimport { Role } from '../../role/entities/role.entity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn(\"increment\")\n  id: number;\n\n  @Column({\n    unique: true,\n    nullable: false\n  })\n  userName: string;\n\n  @Column({\n    nullable: false\n  })\n  password: string;\n\n  @Column({\n    nullable: false\n  })\n  phone: string;\n\n  @Column({\n    nullable: false\n  })\n  @Min(1)\n  @Max(3)\n  gender: number;\n\n  @Column({\n    unique: true,\n    nullable: false\n  })\n  email: string;\n\n  @Column({\n    nullable: false\n  })\n  fullName: string;\n\n  @Column({\n    nullable: false\n  })\n  salary: number;\n\n  @Column({\n    nullable: false\n  })\n  city: string\n\n  @Column({\n    nullable: false\n  })\n  country: string\n\n  @ManyToOne(() => Role, role => role.id,\n    { nullable: false, onDelete: \"CASCADE\" }\n  )\n  role: Role\n\n  @CreateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: 'timestamp with time zone', default: () => 'CURRENT_TIMESTAMP(6)' })\n  updatedAt: Date;\n\n  @BeforeInsert()\n  insertCreated() {\n    this.createdAt = new Date(\n      moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n    );\n    this.updatedAt = new Date(\n      moment().utc().format(\"YYYY-MM-DD HH:mm:ss\")\n    );\n  }\n\n  @BeforeUpdate()\n  insertUpdated() {\n    this.updatedAt = new Date(\n      moment().utc().format(\"YYYY-MM-DD hh:mm:ss\")\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBackendDto.html":{"url":"classes/UserBackendDto.html","title":"class - UserBackendDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBackendDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/user/dto/user.backend.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roleId\n                            \n                            \n                                    \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number, minimum: 1, maximum: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String, minLength: 8})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({type: Number, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.backend.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\n\nexport class UserBackendDto {\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    userName: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String,\n        minLength: 8\n    })\n    password: string;\n\n    @IsEmail()\n    @ApiProperty({\n        type: String\n    })\n    email: string\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    phone: string;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number,\n        minimum: 1,\n        maximum: 3\n    })\n    gender: number;\n\n    @IsEmail()\n    @ApiProperty({\n        type: Number,\n        default: -1,\n    })\n    salary: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    city: string\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    country: string\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    roleId: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addNewUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserByCondition\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addNewUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNewUser(roleId: number, userInfo: AddNewUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Add new user with user Id.'})@Post('add-new-user-by-roleId/:roleId')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/user/user.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userInfo\n                                            \n                                                            AddNewUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(condition: string, value: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete user by condition, only allow: userName, email, id.'})@Delete('delete-user-by-condition')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/user/user.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                condition\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all users from database.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/user/user.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserByCondition\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByCondition(condition: string, value: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get user by condition, only allows userName, email, Id.'})@Get('get-user-by-condition')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/user/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                condition\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(userUpdateInfo: UserUpdate, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update user with cookies authentication and user info.'})@Patch('')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/database/user/user.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userUpdateInfo\n                                            \n                                                            UserUpdate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Query, Req } from '@nestjs/common';\nimport { Request } from \"express\";\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { UserService } from './user.service';\nimport { AddNewUserDto } from './dto/user.addNewUser.dto';\nimport { UserUpdate } from './dto/user.update.dto';\n\n@Controller('v1/user')\n@ApiTags('user')\nexport class UserController {\n    constructor(\n        private readonly userService: UserService\n    ) { }\n\n    @ApiOperation({ summary: \"Get all users from database.\" })\n    @Get()\n    async getAllUser() {\n        try {\n            const allUser = await this.userService.getAllUser();\n            return {\n                status: HttpStatus.OK,\n                error: 0,\n                message: \"Get all users successfully !\",\n                data: allUser\n            }\n        } catch (err) {\n            console.error(\"user.controller.ts getAllUser: \", err.message);\n            return {\n                status: err.status,\n                error: 1,\n                message: err.response.message\n            }\n        }\n    }\n\n    @ApiOperation({ summary: \"Get user by condition, only allows userName, email, Id.\" })\n    @Get(\"get-user-by-condition\")\n    async getUserByCondition(@Query(\"condition\") condition: string, @Query(\"value\") value: string) {\n        try {\n            const allUser = await this.userService.getUserByCondition(condition, value);\n            return {\n                status: HttpStatus.OK,\n                error: 0,\n                message: \"Get users by condition successfully !\",\n                data: allUser\n            }\n        } catch (err) {\n            console.error(\"user.controller.ts getUserByCondition: \", err.message);\n            return {\n                status: err.status,\n                error: 1,\n                message: err.response.message\n            }\n        }\n    }\n\n    @ApiOperation({ summary: \"Add new user with user Id.\" })\n    @Post(\"add-new-user-by-roleId/:roleId\")\n    async addNewUser(@Param(\"roleId\") roleId: number, @Body() userInfo: AddNewUserDto) {\n        try {\n            const userData = {\n                ...userInfo,\n                roleId: roleId\n            }\n            const result = await this.userService.addNewUser(userData)\n            if (result) {\n                return {\n                    status: HttpStatus.CREATED,\n                    error: 0,\n                    message: \"Add new user successfully.\",\n                    data: result\n                }\n            }\n        } catch (err) {\n            console.error(\"user.controller.ts addNewUser: \", err)\n            return {\n                status: err.status,\n                error: 1,\n                message: err.response.message || err.message\n            }\n        }\n    }\n\n    @ApiOperation({ summary: \"Update user with cookies authentication and user info.\" })\n    @Patch(\"\")\n    async updateUser(@Body() userUpdateInfo: UserUpdate, @Req() request: Request) {\n        const cookies = request.cookies\n        try {\n            const result = await this.userService.updateUserById(userUpdateInfo, cookies)\n            return {\n                status: HttpStatus.OK,\n                error: 0,\n                message: \"Update user successfully.\",\n                data: result\n            }\n        } catch (err) {\n            console.error(\"user.controller.ts updateUser: \", err)\n            return {\n                status: err.status,\n                error: 1,\n                message: err.response.message\n            }\n        }\n    }\n\n    @ApiOperation({ summary: \"Delete user by condition, only allow: userName, email, id.\" })\n    @Delete('delete-user-by-condition')\n    async deleteUser(@Query(\"condition\") condition: string, @Query(\"value\") value: string, @Req() request: Request) {\n        const cookies = request.cookies;\n        try {\n            const result = await this.userService.deleteUser(cookies, condition, value)\n            return {\n                status: HttpStatus.OK,\n                error: 0,\n                message: \"Delete user successfully\",\n                data: result\n            }\n        } catch (err) {\n            console.error(\"user.controller.ts deleteUser: \", err)\n            return {\n                status: err.status,\n                error: 1,\n                message: err.response.message\n            }\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLogin.html":{"url":"classes/UserLogin.html","title":"class - UserLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/auth/dto/user.login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Min(8)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.login.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.login.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsPassportNumber, IsString, IsStrongPassword, Max, Min } from \"class-validator\";\n\n\nexport class UserLogin {\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    userName: string;\n\n    @IsString()\n    @Min(8)\n    @ApiProperty({\n        type: String\n    })\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/database/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { User } from './entities/user.entity';\nimport { Role } from '../role/entities/role.entity';\nimport { RoleController } from '../role/role.controller';\nimport { RoleService } from '../role/role.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Role]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        global: true,\n        secret: configService.get(\"JWT_KEY\"),\n        signOptions: { expiresIn: configService.get(\"EXPIRE_IN\") },\n      })\n    })\n  ],\n  controllers: [UserController, RoleController],\n  providers: [UserService, RoleService]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRegister.html":{"url":"classes/UserRegister.html","title":"class - UserRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/auth/dto/user.register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(1)@Max(3)@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Min(8)@ApiProperty({type: String, minLength: 8})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/auth/dto/user.register.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString, Max, Min } from \"class-validator\";\n\nexport class UserRegister {\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    userName: string;\n\n    @IsString()\n    @Min(8)\n    @ApiProperty({\n        type: String,\n        minLength: 8,\n    })\n    password: string;\n\n    @IsEmail()\n    @ApiProperty({\n        type: String\n    })\n    email: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    fullName: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    phone: string;\n\n    @IsNumber()\n    @Min(1)\n    @Max(3)\n    @ApiProperty({\n        type: Number\n    })\n    gender: number;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number\n    })\n    salary: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    city: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    country: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                getUserByCondition\n                            \n                            \n                                    Async\n                                updateUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: Repository, roleService: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/v1/database/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addNewUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNewUser(userData: UserBackendDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/user/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            UserBackendDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(cookies: Record, condition: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/user/user.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cookies\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                condition\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/user/user.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserByCondition\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByCondition(condition: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/user/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                condition\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserById(userData: UserUpdate, cookies: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/database/user/user.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            UserUpdate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cookies\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Like, MoreThan, Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from './entities/user.entity';\nimport { Role } from '../role/entities/role.entity';\nimport { UserBackendDto } from './dto/user.backend.dto';\nimport { UserUpdate } from './dto/user.update.dto';\n\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private readonly userService: Repository,\n    @InjectRepository(Role) private readonly roleService: Repository,\n    private jwtService: JwtService\n  ) { }\n\n  async getAllUser() {\n    try {\n      const allUser = await this.userService.findAndCount({\n        relations: {\n          role: true\n        }\n      })\n      return allUser[0]\n    } catch (err) {\n      console.error(\"user.sevice.ts getAllUser: \", err.message)\n      throw new InternalServerErrorException({ message: \"Something went wrong! Please try again later.\" })\n    }\n  }\n\n  async getUserByCondition(condition: string, value: string) {\n    if (![\"userName\", \"email\", \"id\"].includes(condition)) {\n      throw new BadRequestException({ message: \"condition should be userName, email or id\" })\n    }\n    const users = await this.userService.find({\n      where: {\n        userName: condition == \"userName\" ? value : Like(\"%\"),\n        email: condition == \"email\" ? value : Like(\"%\"),\n        id: condition == \"id\" ? parseInt(value) : MoreThan(0)\n      },\n      relations: [\"role\"]\n    })\n    return users\n  }\n\n  async addNewUser(userData: UserBackendDto) {\n    const roldId = userData.roleId;\n    const role = await this.roleService.findOne({ where: { id: roldId } })\n\n    const password = userData.password;\n    if (password.length ) {\n    const token = cookies[\"access_token\"]\n    if (!token) {\n      throw new UnauthorizedException({ message: \"token not found !\" })\n    }\n    const JWT_KEY = process.env.JWT_KEY;\n    let payload;\n    try {\n      payload = await this.jwtService.verifyAsync(\n        token.access_token,\n        {\n          secret: JWT_KEY\n        }\n      );\n    } catch (err) {\n      throw new UnauthorizedException({ message: \"token expired\" });\n    }\n    const id = payload[\"id\"]\n    const user = await this.userService.findOne({\n      where: {\n        id: id\n      },\n      relations: [\"role\"]\n    })\n    if (!user) {\n      throw new NotFoundException({ message: \"User not found in database.\" })\n    }\n    userData.id = user.id\n    return await this.userService.update({ id: id }, userData)\n  }\n\n  async deleteUser(cookies: Record, condition: string, value: string) {\n    if (![\"userName\", \"email\", \"id\"].includes(condition)) {\n      throw new BadRequestException({ message: \"condition should be userName, email or id\" })\n    }\n\n    // get access_token from cookies\n    const token = cookies[\"access_token\"]\n    if (!token) {\n      throw new UnauthorizedException({ message: \"token not found\" });\n    }\n    const JWT_KEY = process.env.JWT_KEY\n    let payload;\n    try {\n      payload = await this.jwtService.verifyAsync(\n        token.access_token,\n        {\n          secret: JWT_KEY\n        }\n      );\n    } catch (err) {\n      throw new UnauthorizedException({ message: \"token expired\" });\n    }\n    const adminId = payload[\"id\"]\n    const admin = await this.userService.findOne(\n      {\n        where: { id: adminId },\n        relations: [\"role\"]\n      }\n    )\n    if (admin.role.id >= 3) {\n      throw new BadRequestException({ message: \"not allowed to delete user\" });\n    }\n\n    if (condition == \"userName\") {\n      const user = await this.userService.findOne({\n        where: { userName: value },\n        relations: [\"role\"]\n      })\n      if (!user) {\n        throw new BadRequestException({ message: \"user not found\" });\n      }\n      if (user.role.id \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdate.html":{"url":"classes/UserUpdate.html","title":"class - UserUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/database/user/dto/user.update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number, minimum: 1, maximum: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/database/user/dto/user.update.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\n\nexport class UserUpdate {\n    @IsNumber()\n    id?: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    userName: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    fullName: string\n\n    @IsEmail()\n    @ApiProperty({\n        type: String\n    })\n    email: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    phone: string;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number,\n        minimum: 1,\n        maximum: 3\n    })\n    gender: number;\n\n    @IsNumber()\n    @ApiProperty({\n        type: Number,\n    })\n    salary: number;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    city: string;\n\n    @IsString()\n    @ApiProperty({\n        type: String\n    })\n    country: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/request.logging.ts\n            \n            injectable\n            AppLoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/auth/dto/user.login.dto.ts\n            \n            class\n            UserLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/auth/dto/user.register.dto.ts\n            \n            class\n            UserRegister\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/v1/auth/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/auth/register/register.service.ts\n            \n            injectable\n            RegisterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/database/bill/bill.controller.ts\n            \n            controller\n            BillController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/bill/bill.service.ts\n            \n            injectable\n            BillService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/bill/dto/create-bill.dto.ts\n            \n            class\n            CreateBillDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/bill/dto/update-bill.dto.ts\n            \n            class\n            UpdateBillDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/bill/entities/bill.entity.ts\n            \n            entity\n            Bill\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/manage/dto/create-manage.dto.ts\n            \n            class\n            CreateManageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/manage/dto/update-manage.dto.ts\n            \n            class\n            UpdateManageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/manage/entities/manage.entity.ts\n            \n            entity\n            Manage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/manage/manage.controller.ts\n            \n            controller\n            ManageController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/manage/manage.service.ts\n            \n            injectable\n            ManageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/database/role/dto/delete-role.dto.ts\n            \n            class\n            DeleteRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/v1/database/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/database/role/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/role/entities/role.entity.ts\n            \n            function\n            convertTZ\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/v1/database/room/dto/create-room.dto.ts\n            \n            class\n            CreateRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room/dto/update-room.dto.ts\n            \n            class\n            UpdateRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room/entities/room.entity.ts\n            \n            entity\n            Room\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room/room.controller.ts\n            \n            controller\n            RoomController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/room/room.service.ts\n            \n            injectable\n            RoomService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/room_detail/dto/create-room_detail.dto.ts\n            \n            class\n            CreateRoomDetailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room_detail/dto/update-room_detail.dto.ts\n            \n            class\n            UpdateRoomDetailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room_detail/entities/room_detail.entity.ts\n            \n            entity\n            RoomDetail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room_detail/room_detail.controller.ts\n            \n            controller\n            RoomDetailController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/room_detail/room_detail.service.ts\n            \n            injectable\n            RoomDetailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/room_type/dto/room_type.addNew.dto.ts\n            \n            class\n            RoomTypeAddNewDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/v1/database/room_type/dto/room_type.updateRoomType.dto.ts\n            \n            class\n            UpdateRoomTypeDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/v1/database/room_type/entities/room_type.entity.ts\n            \n            entity\n            RoomType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/room_type/room_type.controller.ts\n            \n            controller\n            RoomTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/room_type/room_type.service.ts\n            \n            injectable\n            RoomTypeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/v1/database/services/dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/services/dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/services/entities/service.entity.ts\n            \n            entity\n            Service\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/services/services.controller.ts\n            \n            controller\n            ServicesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/services/services.service.ts\n            \n            injectable\n            ServicesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/services_used/dto/create-services_used.dto.ts\n            \n            class\n            CreateServicesUsedDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/services_used/dto/update-services_used.dto.ts\n            \n            class\n            UpdateServicesUsedDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/services_used/entities/services_used.entity.ts\n            \n            entity\n            ServicesUsed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/services_used/services_used.controller.ts\n            \n            controller\n            ServicesUsedController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/services_used/services_used.service.ts\n            \n            injectable\n            ServicesUsedService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/user/dto/user.addNewUser.dto.ts\n            \n            class\n            AddNewUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/v1/database/user/dto/user.backend.dto.ts\n            \n            class\n            UserBackendDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/v1/database/user/dto/user.update.dto.ts\n            \n            class\n            UserUpdate\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/v1/database/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/database/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/database/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/moment-timezone : ^0.5.30\n        \n            bcrypt : ^5.1.1\n        \n            brcypt : ^1.0.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            moment-timezone : ^0.5.33\n        \n            pg : ^8.11.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            convertTZ   (src/.../role.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/v1/database/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertTZ\n                        \n                    \n                \n            \n            \n                \nconvertTZ(date, tzString)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tzString\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHotel Management API\nInstallation\nExample :npm i\n\ndocker compose -f database.yml up -dDocumentation\nExample :npx @compodoc/compodoc -p tsconfig.json -s\nNote: Serving documentation from ./documentation/ at http://127.0.0.1:8080\n\nModules\n\nAuth modules\n\nSource: src\n\n\n\nRoutes\nMethod\nDescription\nKey\nMore\n\n\n\n\nv1/auth/login\nPOST\nUser login\nuserName: string, password: string\nBody\n\n\nv1/auth/register\nPOST\nUser registration\nuserName: string, password: string, email: string, fullName: string, phone: string, gender: number, salary: number, city: string, country: string\nBody\n\n\n\n\n\n\nRole modules\n\nSource: src\n\n\n\nRoutes\nMethod\nDescription\nKey\nMore\n\n\n\n\nv1/role\nGET\nGet all roles.\n-\n-\n\n\nv1/role\nPOST\nAdd new role.\nid: number, name: string\nBody\n\n\nv1/role\nPATCH\nUpdate a role by ID\nid: number, name: string\nBody\n\n\nv1/role/get-role-by-id/{id}\nGET\nGet role by Id.\nid: number\nParam\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BillModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomDetailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesUsedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BillModule\n\n\n\ncluster_BillModule_providers\n\n\n\ncluster_ManageModule\n\n\n\ncluster_ManageModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoomDetailModule\n\n\n\ncluster_RoomDetailModule_providers\n\n\n\ncluster_RoomModule\n\n\n\ncluster_RoomModule_providers\n\n\n\ncluster_RoomTypeModule\n\n\n\ncluster_RoomTypeModule_providers\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_ServicesUsedModule\n\n\n\ncluster_ServicesUsedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoomTypeModule\n\nRoomTypeModule\n\nAppModule -->\n\nRoomTypeModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAuthModule -->\n\nLoginService->AuthModule\n\n\n\n\n\nRegisterService\n\nRegisterService\n\nAuthModule -->\n\nRegisterService->AuthModule\n\n\n\n\n\nBillService\n\nBillService\n\n\n\nBillModule\n\nBillModule\n\nBillModule -->\n\nBillService->BillModule\n\n\n\n\n\nManageService\n\nManageService\n\n\n\nManageModule\n\nManageModule\n\nManageModule -->\n\nManageService->ManageModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\nUserModule -->\n\nRoleService->UserModule\n\n\n\n\n\nRoomDetailService\n\nRoomDetailService\n\n\n\nRoomDetailModule\n\nRoomDetailModule\n\nRoomDetailModule -->\n\nRoomDetailService->RoomDetailModule\n\n\n\n\n\nRoomService\n\nRoomService\n\n\n\nRoomModule\n\nRoomModule\n\nRoomModule -->\n\nRoomService->RoomModule\n\n\n\n\n\nRoomTypeService\n\nRoomTypeService\n\nRoomTypeModule -->\n\nRoomTypeService->RoomTypeModule\n\n\n\n\n\nServicesService\n\nServicesService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nServicesService->ServicesModule\n\n\n\n\n\nServicesUsedService\n\nServicesUsedService\n\n\n\nServicesUsedModule\n\nServicesUsedModule\n\nServicesUsedModule -->\n\nServicesUsedService->ServicesUsedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
