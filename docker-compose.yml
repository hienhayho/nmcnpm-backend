version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: hienht_postgres
    command: "-c logging_collector=on"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./nmcnpm-backend/data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
  frontend:
    build:
      context: ./nmcnpm-frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    stdin_open: true
    container_name: hienht_frontend
    environment:
      - NEXT_PUBLIC_BACKEND_HOST=${NEXT_PUBLIC_BACKEND_HOST}
      - NEXT_PUBLIC_BACKEND_PORT=${NEXT_PUBLIC_BACKEND_PORT}
      - NEXT_PUBLIC_IMAGES_FOLDER=${NEXT_PUBLIC_IMAGES_FOLDER}
    ports:
      - 5050:3000
  backend:
    build:
      context: ./nmcnpm-backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: unless-stopped
    tty: true
    stdin_open: true
    container_name: hienht_backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - RUNNING_PORT=${RUNNING_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - SALT=${SALT}
      - JWT_KEY=${JWT_KEY}
      - EXPIRE_IN=${EXPIRE_IN}
      - FRONTEND_HOST=${FRONTEND_HOST}
    ports:
      - ${RUNNING_PORT}:3050
